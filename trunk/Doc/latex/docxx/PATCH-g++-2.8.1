Only in src-g++-2.8.1: .html
Binary files src/ClassGraph.class and src-g++-2.8.1/ClassGraph.class differ
Binary files src/ClassGraphPanel.class and src-g++-2.8.1/ClassGraphPanel.class differ
Binary files src/ClassLayout.class and src-g++-2.8.1/ClassLayout.class differ
Only in src-g++-2.8.1: Entry.o
diff -c src/Makefile src-g++-2.8.1/Makefile
*** src/Makefile	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/Makefile	Tue Sep 15 11:43:00 1998
***************
*** 59,67 ****
  #
  #######################################################################
  ifeq ($(UNAME),SunOS)
!     CXX = g++
!     CC = gcc
!     OPTIMIZER = -O2 -funroll-all-loops
  endif
  
  
--- 59,69 ----
  #
  #######################################################################
  ifeq ($(UNAME),SunOS)
!     CXX = g++ -Wall -g
!     CC = gcc -Wall -g
!     OPTIMIZER = -O0
!     # -funroll-all-loops breaks Entry.cpp; -O2 depletes VM in cpp.cpp
!     #OPTIMIZER = -O2 -funroll-all-loops
  endif
  
  
diff -c src/McDArray.h src-g++-2.8.1/McDArray.h
*** src/McDArray.h	Fri Jul 31 03:00:43 1998
--- src-g++-2.8.1/McDArray.h	Tue Sep 15 09:01:30 1998
***************
*** 72,79 ****
  {
    public:
      /// Copy constructor.
!     McDArray(const McDArray& old) : thesize(old.thesize),
! 	themax(old.themax), memFactor(old.memFactor)
      {
  	data = (T*)malloc(themax*sizeof(T));
  	if (thesize)
--- 72,79 ----
  {
    public:
      /// Copy constructor.
!     McDArray(const McDArray& old) : memFactor(old.memFactor), 
! 	thesize(old.thesize), themax(old.themax)
      {
  	data = (T*)malloc(themax*sizeof(T));
  	if (thesize)
***************
*** 121,127 ****
      /// Insert #n# uninitialized elements before #i#-th element.
      int insertSpace(int addBefore, int n=1)
      {
- 	int j = size();
  	int delta = resize(thesize+n);
  	
  	T* ptrdest = &last();        // new last element
--- 121,126 ----
***************
*** 321,327 ****
  template<class T>
  static int rindex(McDArray<T>& array, const T& elem)
  {
!     for (int i=array.size()-1; i>=0; i--)
  	if (array[i] == elem) return i;
      return i;
  }
--- 320,327 ----
  template<class T>
  static int rindex(McDArray<T>& array, const T& elem)
  {
!     int i;
!     for (array.size()-1; i>=0; i--)
  	if (array[i] == elem) return i;
      return i;
  }
diff -c src/McDirectory.cpp src-g++-2.8.1/McDirectory.cpp
*** src/McDirectory.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/McDirectory.cpp	Tue Sep 15 10:09:29 1998
***************
*** 73,79 ****
  	return(0);
      }
  
!     while (entry = readdir(dir)) {
  	if (entry->d_name[0]!='.')
  	    if (mcWildMatch(entry->d_name,pattern))		
  		list.append(strdup(entry->d_name));
--- 73,79 ----
  	return(0);
      }
  
!     while ((entry = readdir(dir))) {
  	if (entry->d_name[0]!='.')
  	    if (mcWildMatch(entry->d_name,pattern))		
  		list.append(strdup(entry->d_name));
Only in src-g++-2.8.1: McDirectory.o
Only in src-g++-2.8.1: McHashTable.o
diff -c src/McSorter.h src-g++-2.8.1/McSorter.h
*** src/McSorter.h	Fri Jul 31 03:00:43 1998
--- src-g++-2.8.1/McSorter.h	Tue Sep 15 11:17:49 1998
***************
*** 66,90 ****
  	sort( t, end, compare, i1+1 ) ;
  }
  
  #ifndef	_CRAYMPP
  /*@ManDoc:
!     The template function #sort# sorts an array #t# holding #n# elements of type
!     #T#, which must provide an #operator>#.
   */
  template< class T >
! void	sort( T* t, int n )
! 	{
! 	    struct
! 	    {
! 		int	operator()(T i, T j)
! 			{
! 			    return (i < j) ? -1 : ((j < i) ? 1 : 0) ;
! 			}
! 	    } c ;
! 	    sort(t, n, c, 0) ;
  	}
  #endif	//@ _CRAYMPP
  //@}
  
  
  #endif // #DEFsorter#
--- 66,94 ----
  	sort( t, end, compare, i1+1 ) ;
  }
  
+ #if 0
+ // This template is unused and causes an internal compiler error in g++
+ // 2.8.1. 9/15/98 jhrg
  #ifndef	_CRAYMPP
  /*@ManDoc:
!     The template function #sort# sorts an array #t# holding #n# elements of
!     type #T#, which must provide an #operator>#.
   */
  template< class T >
! void 
! sort( T* t, int n )
! {
!     struct dummy {
! 	int operator()(T i, T j) {
! 	    return (i < j) ? -1 : ((j < i) ? 1 : 0) ;
  	}
+     } c ;
+ 
+     sort(t, n, c, 0) ;
+ }
  #endif	//@ _CRAYMPP
  //@}
+ #endif
  
  
  #endif // #DEFsorter#
Only in src-g++-2.8.1: McWildMatch.o
Binary files src/NavigatorButton.class and src-g++-2.8.1/NavigatorButton.class differ
Only in src-g++-2.8.1: TAGS
Only in src-g++-2.8.1: bin
Only in src-g++-2.8.1: classgraph.o
diff -c src/cpp.cpp src-g++-2.8.1/cpp.cpp
*** src/cpp.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/cpp.cpp	Tue Sep 15 11:43:33 1998
***************
*** 19,25 ****
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
--- 19,25 ----
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
***************
*** 254,260 ****
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
--- 254,260 ----
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
***************
*** 1267,1277 ****
  
  static int		yyLineNr = 0 ;
  static char		yyFileName[264] ;
! static McString*	currentString ;
  
  static void	setSection( int	sec )
  {
  }
  
  static void	msg( const char* str, const char* str2=0 )
  {
--- 1267,1280 ----
  
  static int		yyLineNr = 0 ;
  static char		yyFileName[264] ;
! // static McString*	currentString ; Not used! 9/15/98 jhrg
  
+ #if 0
+ // Not used. 9/15/98 jhrg
  static void	setSection( int	sec )
  {
  }
+ #endif
  
  static void	msg( const char* str, const char* str2=0 )
  {
***************
*** 1548,1554 ****
  	register char *yy_cp, *yy_bp;
  	register int yy_act;
  
! #line 150 "cpp.l"
  
  
  
--- 1551,1557 ----
  	register char *yy_cp, *yy_bp;
  	register int yy_act;
  
! #line 153 "cpp.l"
  
  
  
***************
*** 1657,1663 ****
  	{ /* beginning of action switch */
  case 1:
  YY_RULE_SETUP
! #line 152 "cpp.l"
  { 
                                            yyLineNr= 1 ; int i;
  					  for( i = 0 ; yytext[i+1] != 6 ; i++ )
--- 1660,1666 ----
  	{ /* beginning of action switch */
  case 1:
  YY_RULE_SETUP
! #line 155 "cpp.l"
  { 
                                            yyLineNr= 1 ; int i;
  					  for( i = 0 ; yytext[i+1] != 6 ; i++ )
***************
*** 1673,1705 ****
  	YY_BREAK
  case 2:
  YY_RULE_SETUP
! #line 165 "cpp.l"
  { BEGIN( FindMembers ) ; }
  	YY_BREAK
  case 3:
  YY_RULE_SETUP
! #line 167 "cpp.l"
  { current->protection = protection = PUBL ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 4:
  YY_RULE_SETUP
! #line 170 "cpp.l"
  { current->protection = protection = PROT ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 5:
  YY_RULE_SETUP
! #line 173 "cpp.l"
  { current->protection = protection = PRIV ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 6:
  YY_RULE_SETUP
! #line 177 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef class" ;
--- 1676,1708 ----
  	YY_BREAK
  case 2:
  YY_RULE_SETUP
! #line 168 "cpp.l"
  { BEGIN( FindMembers ) ; }
  	YY_BREAK
  case 3:
  YY_RULE_SETUP
! #line 170 "cpp.l"
  { current->protection = protection = PUBL ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 4:
  YY_RULE_SETUP
! #line 173 "cpp.l"
  { current->protection = protection = PROT ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 5:
  YY_RULE_SETUP
! #line 176 "cpp.l"
  { current->protection = protection = PRIV ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 6:
  YY_RULE_SETUP
! #line 180 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef class" ;
***************
*** 1709,1715 ****
  	YY_BREAK
  case 7:
  YY_RULE_SETUP
! #line 183 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef struct" ;
--- 1712,1718 ----
  	YY_BREAK
  case 7:
  YY_RULE_SETUP
! #line 186 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef struct" ;
***************
*** 1719,1725 ****
  	YY_BREAK
  case 8:
  YY_RULE_SETUP
! #line 189 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef enum" ;
--- 1722,1728 ----
  	YY_BREAK
  case 8:
  YY_RULE_SETUP
! #line 192 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef enum" ;
***************
*** 1729,1735 ****
  	YY_BREAK
  case 9:
  YY_RULE_SETUP
! #line 195 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef union" ;
--- 1732,1738 ----
  	YY_BREAK
  case 9:
  YY_RULE_SETUP
! #line 198 "cpp.l"
  {
  					  current->section = TYPEDEF_SEC ;
  					  current->type = "typedef union" ;
***************
*** 1739,1745 ****
  	YY_BREAK
  case 10:
  YY_RULE_SETUP
! #line 202 "cpp.l"
  { current->section = CLASS_SEC ;
  					  addType( current ) ;
  					  current->type += " class" ;
--- 1742,1748 ----
  	YY_BREAK
  case 10:
  YY_RULE_SETUP
! #line 205 "cpp.l"
  { current->section = CLASS_SEC ;
  					  addType( current ) ;
  					  current->type += " class" ;
***************
*** 1749,1755 ****
  	YY_BREAK
  case 11:
  YY_RULE_SETUP
! #line 208 "cpp.l"
  { current->section = UNION_SEC ;
  					  addType( current ) ;
  					  current->type += " struct" ;
--- 1752,1758 ----
  	YY_BREAK
  case 11:
  YY_RULE_SETUP
! #line 211 "cpp.l"
  { current->section = UNION_SEC ;
  					  addType( current ) ;
  					  current->type += " struct" ;
***************
*** 1759,1765 ****
  	YY_BREAK
  case 12:
  YY_RULE_SETUP
! #line 214 "cpp.l"
  { current->section = UNION_SEC ;
  					  addType( current ) ;
  					  current->type += " enum" ;
--- 1762,1768 ----
  	YY_BREAK
  case 12:
  YY_RULE_SETUP
! #line 217 "cpp.l"
  { current->section = UNION_SEC ;
  					  addType( current ) ;
  					  current->type += " enum" ;
***************
*** 1769,1775 ****
  	YY_BREAK
  case 13:
  YY_RULE_SETUP
! #line 220 "cpp.l"
  { current->section = UNION_SEC ;
  					  addType( current ) ;
  					  current->type += " union" ;
--- 1772,1778 ----
  	YY_BREAK
  case 13:
  YY_RULE_SETUP
! #line 223 "cpp.l"
  { current->section = UNION_SEC ;
  					  addType( current ) ;
  					  current->type += " union" ;
***************
*** 1782,1788 ****
  yy_c_buf_p = yy_cp = yy_bp + 8;
  YY_DO_BEFORE_ACTION; /* set up yytext again */
  YY_RULE_SETUP
! #line 227 "cpp.l"
  { addType( current ) ;
  					  current->name  = yytext ;
  					  BEGIN( Operator ) ;
--- 1785,1791 ----
  yy_c_buf_p = yy_cp = yy_bp + 8;
  YY_DO_BEFORE_ACTION; /* set up yytext again */
  YY_RULE_SETUP
! #line 230 "cpp.l"
  { addType( current ) ;
  					  current->name  = yytext ;
  					  BEGIN( Operator ) ;
***************
*** 1790,1863 ****
  	YY_BREAK
  case 15:
  YY_RULE_SETUP
! #line 231 "cpp.l"
  { current->name += yytext ;
  					  BEGIN( FindMembers ) ;
  					}
  	YY_BREAK
  case 16:
  YY_RULE_SETUP
! #line 235 "cpp.l"
  { addType( current ) ;
  					  current->name  = yytext ;
  					}
  	YY_BREAK
  case 17:
  YY_RULE_SETUP
! #line 239 "cpp.l"
  { BEGIN( SkipCPP ) ; }
  	YY_BREAK
  case 18:
  YY_RULE_SETUP
! #line 240 "cpp.l"
  
  	YY_BREAK
  case 19:
  YY_RULE_SETUP
! #line 241 "cpp.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 20:
  YY_RULE_SETUP
! #line 242 "cpp.l"
  { yyLineNr++ ;
  					  BEGIN( FindMembers ) ;
  					}
  	YY_BREAK
  case 21:
  YY_RULE_SETUP
! #line 246 "cpp.l"
  { current->type = "#define" ;
  					  BEGIN( Define ) ;
  					}
  	YY_BREAK
  case 22:
  YY_RULE_SETUP
! #line 249 "cpp.l"
  { current->name = yytext ;
  					  BEGIN( DefineEnd ) ;
  					}
  	YY_BREAK
  case 23:
  YY_RULE_SETUP
! #line 252 "cpp.l"
  { BEGIN( DefineEnd ) ; }
  	YY_BREAK
  case 24:
  YY_RULE_SETUP
! #line 253 "cpp.l"
  { current->args = yytext ;
  					  BEGIN( DefineEnded ) ;
  					}
  	YY_BREAK
  case 25:
  YY_RULE_SETUP
! #line 256 "cpp.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 26:
  YY_RULE_SETUP
! #line 257 "cpp.l"
  { if( current->done == onlyDocs )
  					  {
  					    current->section = MACRO_SEC ;
--- 1793,1866 ----
  	YY_BREAK
  case 15:
  YY_RULE_SETUP
! #line 234 "cpp.l"
  { current->name += yytext ;
  					  BEGIN( FindMembers ) ;
  					}
  	YY_BREAK
  case 16:
  YY_RULE_SETUP
! #line 238 "cpp.l"
  { addType( current ) ;
  					  current->name  = yytext ;
  					}
  	YY_BREAK
  case 17:
  YY_RULE_SETUP
! #line 242 "cpp.l"
  { BEGIN( SkipCPP ) ; }
  	YY_BREAK
  case 18:
  YY_RULE_SETUP
! #line 243 "cpp.l"
  
  	YY_BREAK
  case 19:
  YY_RULE_SETUP
! #line 244 "cpp.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 20:
  YY_RULE_SETUP
! #line 245 "cpp.l"
  { yyLineNr++ ;
  					  BEGIN( FindMembers ) ;
  					}
  	YY_BREAK
  case 21:
  YY_RULE_SETUP
! #line 249 "cpp.l"
  { current->type = "#define" ;
  					  BEGIN( Define ) ;
  					}
  	YY_BREAK
  case 22:
  YY_RULE_SETUP
! #line 252 "cpp.l"
  { current->name = yytext ;
  					  BEGIN( DefineEnd ) ;
  					}
  	YY_BREAK
  case 23:
  YY_RULE_SETUP
! #line 255 "cpp.l"
  { BEGIN( DefineEnd ) ; }
  	YY_BREAK
  case 24:
  YY_RULE_SETUP
! #line 256 "cpp.l"
  { current->args = yytext ;
  					  BEGIN( DefineEnded ) ;
  					}
  	YY_BREAK
  case 25:
  YY_RULE_SETUP
! #line 259 "cpp.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 26:
  YY_RULE_SETUP
! #line 260 "cpp.l"
  { if( current->done == onlyDocs )
  					  {
  					    current->section = MACRO_SEC ;
***************
*** 1877,1888 ****
  	YY_BREAK
  case 27:
  YY_RULE_SETUP
! #line 274 "cpp.l"
  { current->name += yytext ; }
  	YY_BREAK
  case 28:
  YY_RULE_SETUP
! #line 276 "cpp.l"
  { BEGIN( FindMembers ) ;
  					  msg( "found variable ", current->name ) ;
  					  if( current->done == onlyDocs )
--- 1880,1891 ----
  	YY_BREAK
  case 27:
  YY_RULE_SETUP
! #line 277 "cpp.l"
  { current->name += yytext ; }
  	YY_BREAK
  case 28:
  YY_RULE_SETUP
! #line 279 "cpp.l"
  { BEGIN( FindMembers ) ;
  					  msg( "found variable ", current->name ) ;
  					  if( current->done == onlyDocs )
***************
*** 1906,1912 ****
  	YY_BREAK
  case 29:
  YY_RULE_SETUP
! #line 297 "cpp.l"
  { current->args += yytext ;
  					  sharpCount=1;
  					  BEGIN( Array ) ;
--- 1909,1915 ----
  	YY_BREAK
  case 29:
  YY_RULE_SETUP
! #line 300 "cpp.l"
  { current->args += yytext ;
  					  sharpCount=1;
  					  BEGIN( Array ) ;
***************
*** 1914,1920 ****
  	YY_BREAK
  case 30:
  YY_RULE_SETUP
! #line 301 "cpp.l"
  { current->args += *yytext ;
  					  if (--sharpCount<=0)
  	                                     BEGIN( FindMembers ) ;
--- 1917,1923 ----
  	YY_BREAK
  case 30:
  YY_RULE_SETUP
! #line 304 "cpp.l"
  { current->args += *yytext ;
  					  if (--sharpCount<=0)
  	                                     BEGIN( FindMembers ) ;
***************
*** 1922,1940 ****
  	YY_BREAK
  case 31:
  YY_RULE_SETUP
! #line 305 "cpp.l"
  { current->args += *yytext ;
  					  sharpCount++;	
  					}
  	YY_BREAK
  case 32:
  YY_RULE_SETUP
! #line 308 "cpp.l"
  { current->args += *yytext ; }
  	YY_BREAK
  case 33:
  YY_RULE_SETUP
! #line 310 "cpp.l"
  { addType( current ) ;
  					  current->type += yytext ;
  					  sharpCount=1;
--- 1925,1943 ----
  	YY_BREAK
  case 31:
  YY_RULE_SETUP
! #line 308 "cpp.l"
  { current->args += *yytext ;
  					  sharpCount++;	
  					}
  	YY_BREAK
  case 32:
  YY_RULE_SETUP
! #line 311 "cpp.l"
  { current->args += *yytext ; }
  	YY_BREAK
  case 33:
  YY_RULE_SETUP
! #line 313 "cpp.l"
  { addType( current ) ;
  					  current->type += yytext ;
  					  sharpCount=1;
***************
*** 1943,1949 ****
  	YY_BREAK
  case 34:
  YY_RULE_SETUP
! #line 315 "cpp.l"
  { current->type += *yytext ;
  					  if (--sharpCount<=0)
  	                                     BEGIN( FindMembers ) ;
--- 1946,1952 ----
  	YY_BREAK
  case 34:
  YY_RULE_SETUP
! #line 318 "cpp.l"
  { current->type += *yytext ;
  					  if (--sharpCount<=0)
  	                                     BEGIN( FindMembers ) ;
***************
*** 1951,1984 ****
  	YY_BREAK
  case 35:
  YY_RULE_SETUP
! #line 319 "cpp.l"
  { current->type += *yytext ;
  					  sharpCount++;	
  					}
  	YY_BREAK
  case 36:
  YY_RULE_SETUP
! #line 322 "cpp.l"
  { current->type += *yytext ; }
  	YY_BREAK
  case 37:
  YY_RULE_SETUP
! #line 324 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 38:
  YY_RULE_SETUP
! #line 325 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 39:
  YY_RULE_SETUP
! #line 326 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 40:
  YY_RULE_SETUP
! #line 327 "cpp.l"
  { current->program += yytext ;
  					  lastContext = Curly ;
  					  BEGIN( Comment ) ;
--- 1954,1987 ----
  	YY_BREAK
  case 35:
  YY_RULE_SETUP
! #line 322 "cpp.l"
  { current->type += *yytext ;
  					  sharpCount++;	
  					}
  	YY_BREAK
  case 36:
  YY_RULE_SETUP
! #line 325 "cpp.l"
  { current->type += *yytext ; }
  	YY_BREAK
  case 37:
  YY_RULE_SETUP
! #line 327 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 38:
  YY_RULE_SETUP
! #line 328 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 39:
  YY_RULE_SETUP
! #line 329 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 40:
  YY_RULE_SETUP
! #line 330 "cpp.l"
  { current->program += yytext ;
  					  lastContext = Curly ;
  					  BEGIN( Comment ) ;
***************
*** 1986,1992 ****
  	YY_BREAK
  case 41:
  YY_RULE_SETUP
! #line 331 "cpp.l"
  { current->program += yytext ;
  					  ++yyLineNr ;
  					  lastContext = Curly ;
--- 1989,1995 ----
  	YY_BREAK
  case 41:
  YY_RULE_SETUP
! #line 334 "cpp.l"
  { current->program += yytext ;
  					  ++yyLineNr ;
  					  lastContext = Curly ;
***************
*** 1995,2008 ****
  	YY_BREAK
  case 42:
  YY_RULE_SETUP
! #line 336 "cpp.l"
  { current->program += yytext ;
  					  ++bracketCount ;
  					}
  	YY_BREAK
  case 43:
  YY_RULE_SETUP
! #line 339 "cpp.l"
  { if( bracketCount )
  					  {
  					    current->program += yytext ;
--- 1998,2011 ----
  	YY_BREAK
  case 42:
  YY_RULE_SETUP
! #line 339 "cpp.l"
  { current->program += yytext ;
  					  ++bracketCount ;
  					}
  	YY_BREAK
  case 43:
  YY_RULE_SETUP
! #line 342 "cpp.l"
  { if( bracketCount )
  					  {
  					    current->program += yytext ;
***************
*** 2029,2061 ****
  	YY_BREAK
  case 44:
  YY_RULE_SETUP
! #line 362 "cpp.l"
  { current->program += yytext ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 45:
  YY_RULE_SETUP
! #line 365 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 46:
  YY_RULE_SETUP
! #line 367 "cpp.l"
  { current->args = yytext ;
  					  BEGIN( Round ) ;
  					}
  	YY_BREAK
  case 47:
  YY_RULE_SETUP
! #line 370 "cpp.l"
  { current->args += *yytext ;
  					  ++bracketCount ;
  					}
  	YY_BREAK
  case 48:
  YY_RULE_SETUP
! #line 373 "cpp.l"
  { current->args += *yytext ;
  					  if( bracketCount )
  					    --bracketCount ;
--- 2032,2064 ----
  	YY_BREAK
  case 44:
  YY_RULE_SETUP
! #line 365 "cpp.l"
  { current->program += yytext ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 45:
  YY_RULE_SETUP
! #line 368 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 46:
  YY_RULE_SETUP
! #line 370 "cpp.l"
  { current->args = yytext ;
  					  BEGIN( Round ) ;
  					}
  	YY_BREAK
  case 47:
  YY_RULE_SETUP
! #line 373 "cpp.l"
  { current->args += *yytext ;
  					  ++bracketCount ;
  					}
  	YY_BREAK
  case 48:
  YY_RULE_SETUP
! #line 376 "cpp.l"
  { current->args += *yytext ;
  					  if( bracketCount )
  					    --bracketCount ;
***************
*** 2065,2093 ****
  	YY_BREAK
  case 49:
  YY_RULE_SETUP
! #line 379 "cpp.l"
  { lineCount() ; current->args += ", " ; }
  	YY_BREAK
  case 50:
  YY_RULE_SETUP
! #line 380 "cpp.l"
  { lineCount() ; current->args += ' ' ; }
  	YY_BREAK
  case 51:
  YY_RULE_SETUP
! #line 381 "cpp.l"
  { current->args += *yytext ; }
  	YY_BREAK
  case 52:
  YY_RULE_SETUP
! #line 383 "cpp.l"
  { current->args += " const " ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 53:
  YY_RULE_SETUP
! #line 387 "cpp.l"
  { current->args += " throw(" ;
  					  lineCount() ;
  					  BEGIN( Round ) ;
--- 2068,2096 ----
  	YY_BREAK
  case 49:
  YY_RULE_SETUP
! #line 382 "cpp.l"
  { lineCount() ; current->args += ", " ; }
  	YY_BREAK
  case 50:
  YY_RULE_SETUP
! #line 383 "cpp.l"
  { lineCount() ; current->args += ' ' ; }
  	YY_BREAK
  case 51:
  YY_RULE_SETUP
! #line 384 "cpp.l"
  { current->args += *yytext ; }
  	YY_BREAK
  case 52:
  YY_RULE_SETUP
! #line 386 "cpp.l"
  { current->args += " const " ;
  					  lineCount() ;
  					}
  	YY_BREAK
  case 53:
  YY_RULE_SETUP
! #line 390 "cpp.l"
  { current->args += " throw(" ;
  					  lineCount() ;
  					  BEGIN( Round ) ;
***************
*** 2095,2101 ****
  	YY_BREAK
  case 54:
  YY_RULE_SETUP
! #line 391 "cpp.l"
  { current->type += current->name ;
  					  current->name  = current->args ;
  					  current->args  = yytext ;
--- 2098,2104 ----
  	YY_BREAK
  case 54:
  YY_RULE_SETUP
! #line 394 "cpp.l"
  { current->type += current->name ;
  					  current->name  = current->args ;
  					  current->args  = yytext ;
***************
*** 2104,2110 ****
  	YY_BREAK
  case 55:
  YY_RULE_SETUP
! #line 396 "cpp.l"
  { msg( "found method   ", current->name ) ;
  					  if( current->done == onlyDocs )
  					  {
--- 2107,2113 ----
  	YY_BREAK
  case 55:
  YY_RULE_SETUP
! #line 399 "cpp.l"
  { msg( "found method   ", current->name ) ;
  					  if( current->done == onlyDocs )
  					  {
***************
*** 2129,2145 ****
  	YY_BREAK
  case 56:
  YY_RULE_SETUP
! #line 418 "cpp.l"
  { BEGIN( SkipCurly ) ; }
  	YY_BREAK
  case 57:
  YY_RULE_SETUP
! #line 419 "cpp.l"
  { ++bracketCount ; }
  	YY_BREAK
  case 58:
  YY_RULE_SETUP
! #line 420 "cpp.l"
  { if( bracketCount )
  					    --bracketCount ;
  					  else
--- 2132,2148 ----
  	YY_BREAK
  case 56:
  YY_RULE_SETUP
! #line 421 "cpp.l"
  { BEGIN( SkipCurly ) ; }
  	YY_BREAK
  case 57:
  YY_RULE_SETUP
! #line 422 "cpp.l"
  { ++bracketCount ; }
  	YY_BREAK
  case 58:
  YY_RULE_SETUP
! #line 423 "cpp.l"
  { if( bracketCount )
  					    --bracketCount ;
  					  else
***************
*** 2148,2154 ****
  	YY_BREAK
  case 59:
  YY_RULE_SETUP
! #line 426 "cpp.l"
  { if( current->done == onlyDocs )
  					  {
  					    current->section = VARIABLE_SEC ;
--- 2151,2157 ----
  	YY_BREAK
  case 59:
  YY_RULE_SETUP
! #line 429 "cpp.l"
  { if( current->done == onlyDocs )
  					  {
  					    current->section = VARIABLE_SEC ;
***************
*** 2168,2174 ****
  	YY_BREAK
  case 60:
  YY_RULE_SETUP
! #line 442 "cpp.l"
  { current->type += ' ' ;
  					  current->type += current->name ;
  					  current->name = yytext ;
--- 2171,2177 ----
  	YY_BREAK
  case 60:
  YY_RULE_SETUP
! #line 445 "cpp.l"
  { current->type += ' ' ;
  					  current->type += current->name ;
  					  current->name = yytext ;
***************
*** 2176,2189 ****
  	YY_BREAK
  case 61:
  YY_RULE_SETUP
! #line 446 "cpp.l"
  { current->args = ":" ;
  					  BEGIN( Bases ) ;
  					}
  	YY_BREAK
  case 62:
  YY_RULE_SETUP
! #line 449 "cpp.l"
  { current->file = yyFileName ;
  					  current->startLine = yyLineNr ;
  					  msg( "found class    ", current->name ) ;
--- 2179,2192 ----
  	YY_BREAK
  case 61:
  YY_RULE_SETUP
! #line 449 "cpp.l"
  { current->args = ":" ;
  					  BEGIN( Bases ) ;
  					}
  	YY_BREAK
  case 62:
  YY_RULE_SETUP
! #line 452 "cpp.l"
  { current->file = yyFileName ;
  					  current->startLine = yyLineNr ;
  					  msg( "found class    ", current->name ) ;
***************
*** 2192,2198 ****
  	YY_BREAK
  case 63:
  YY_RULE_SETUP
! #line 454 "cpp.l"
  { current->extends.append(
  					    new McString(yytext)
  					  ) ;
--- 2195,2201 ----
  	YY_BREAK
  case 63:
  YY_RULE_SETUP
! #line 457 "cpp.l"
  { current->extends.append(
  					    new McString(yytext)
  					  ) ;
***************
*** 2202,2232 ****
  	YY_BREAK
  case 64:
  YY_RULE_SETUP
! #line 460 "cpp.l"
  { current->args += ',' ; }
  	YY_BREAK
  case 65:
  YY_RULE_SETUP
! #line 462 "cpp.l"
  { current->program += yytext ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 66:
  YY_RULE_SETUP
! #line 465 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 67:
  YY_RULE_SETUP
! #line 466 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( Curly ) ;
  					}
  	YY_BREAK
  case 68:
  YY_RULE_SETUP
! #line 470 "cpp.l"
  { lineCount() ;
  					  if( current->doc.length() > 0
  					  ||  current->memo.length() > 0 )
--- 2205,2235 ----
  	YY_BREAK
  case 64:
  YY_RULE_SETUP
! #line 463 "cpp.l"
  { current->args += ',' ; }
  	YY_BREAK
  case 65:
  YY_RULE_SETUP
! #line 465 "cpp.l"
  { current->program += yytext ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 66:
  YY_RULE_SETUP
! #line 468 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 67:
  YY_RULE_SETUP
! #line 469 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( Curly ) ;
  					}
  	YY_BREAK
  case 68:
  YY_RULE_SETUP
! #line 473 "cpp.l"
  { lineCount() ;
  					  if( current->doc.length() > 0
  					  ||  current->memo.length() > 0 )
***************
*** 2241,2271 ****
  	YY_BREAK
  case 69:
  YY_RULE_SETUP
! #line 481 "cpp.l"
  { current->memo += yytext ; }
  	YY_BREAK
  case 70:
  YY_RULE_SETUP
! #line 482 "cpp.l"
  { yyLineNr++ ;
  					  BEGIN( FindMembers ) ;
  					}
  	YY_BREAK
  case 71:
  YY_RULE_SETUP
! #line 486 "cpp.l"
  
  	YY_BREAK
  case 72:
  YY_RULE_SETUP
! #line 487 "cpp.l"
  { lastCContext = YY_START ;
  					  BEGIN( SkipComment ) ;
  					}
  	YY_BREAK
  case 73:
  YY_RULE_SETUP
! #line 490 "cpp.l"
  { lineCount() ;
  					  if( current->doc.length() > 0
  					  ||  current->memo.length() > 0 )
--- 2244,2274 ----
  	YY_BREAK
  case 69:
  YY_RULE_SETUP
! #line 484 "cpp.l"
  { current->memo += yytext ; }
  	YY_BREAK
  case 70:
  YY_RULE_SETUP
! #line 485 "cpp.l"
  { yyLineNr++ ;
  					  BEGIN( FindMembers ) ;
  					}
  	YY_BREAK
  case 71:
  YY_RULE_SETUP
! #line 489 "cpp.l"
  
  	YY_BREAK
  case 72:
  YY_RULE_SETUP
! #line 490 "cpp.l"
  { lastCContext = YY_START ;
  					  BEGIN( SkipComment ) ;
  					}
  	YY_BREAK
  case 73:
  YY_RULE_SETUP
! #line 493 "cpp.l"
  { lineCount() ;
  					  if( current->doc.length() > 0
  					  ||  current->memo.length() > 0 )
***************
*** 2280,2339 ****
  	YY_BREAK
  case 74:
  YY_RULE_SETUP
! #line 501 "cpp.l"
  { BEGIN( FindMembers ) ; }
  	YY_BREAK
  case 75:
  YY_RULE_SETUP
! #line 502 "cpp.l"
  { current->doc += yytext ;
  					  BEGIN( VerbDoc ) ;
  					}
  	YY_BREAK
  case 76:
  YY_RULE_SETUP
! #line 505 "cpp.l"
  { current->doc += '\n' ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 77:
  YY_RULE_SETUP
! #line 508 "cpp.l"
  { current->doc += yytext ;
  					  BEGIN( Doc ) ;
  					}
  	YY_BREAK
  case 78:
  YY_RULE_SETUP
! #line 511 "cpp.l"
  { current->doc += '\n' ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 79:
  YY_RULE_SETUP
! #line 514 "cpp.l"
  { current->doc += *yytext ; }
  	YY_BREAK
  case 80:
  YY_RULE_SETUP
! #line 515 "cpp.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 81:
  YY_RULE_SETUP
! #line 516 "cpp.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 82:
  YY_RULE_SETUP
! #line 517 "cpp.l"
  { BEGIN( FindMembers ) ; }
  	YY_BREAK
  case 83:
  YY_RULE_SETUP
! #line 519 "cpp.l"
  { lineCount() ;
  					  current->file = yyFileName ;
  					  current->startLine = yyLineNr ;
--- 2283,2342 ----
  	YY_BREAK
  case 74:
  YY_RULE_SETUP
! #line 504 "cpp.l"
  { BEGIN( FindMembers ) ; }
  	YY_BREAK
  case 75:
  YY_RULE_SETUP
! #line 505 "cpp.l"
  { current->doc += yytext ;
  					  BEGIN( VerbDoc ) ;
  					}
  	YY_BREAK
  case 76:
  YY_RULE_SETUP
! #line 508 "cpp.l"
  { current->doc += '\n' ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 77:
  YY_RULE_SETUP
! #line 511 "cpp.l"
  { current->doc += yytext ;
  					  BEGIN( Doc ) ;
  					}
  	YY_BREAK
  case 78:
  YY_RULE_SETUP
! #line 514 "cpp.l"
  { current->doc += '\n' ;
  					  yyLineNr++ ;
  					}
  	YY_BREAK
  case 79:
  YY_RULE_SETUP
! #line 517 "cpp.l"
  { current->doc += *yytext ; }
  	YY_BREAK
  case 80:
  YY_RULE_SETUP
! #line 518 "cpp.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 81:
  YY_RULE_SETUP
! #line 519 "cpp.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 82:
  YY_RULE_SETUP
! #line 520 "cpp.l"
  { BEGIN( FindMembers ) ; }
  	YY_BREAK
  case 83:
  YY_RULE_SETUP
! #line 522 "cpp.l"
  { lineCount() ;
  					  current->file = yyFileName ;
  					  current->startLine = yyLineNr ;
***************
*** 2342,2374 ****
  	YY_BREAK
  case 84:
  YY_RULE_SETUP
! #line 524 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( SubDocComment ) ;
  					}
  	YY_BREAK
  case 85:
  YY_RULE_SETUP
! #line 527 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( SubDocCppComment ) ;
  					}
  	YY_BREAK
  case 86:
  YY_RULE_SETUP
! #line 530 "cpp.l"
  { current->program += *yytext ; }
  	YY_BREAK
  case 87:
  YY_RULE_SETUP
! #line 531 "cpp.l"
  { current->program += *yytext ;
  					  ++yyLineNr ;
  					}
  	YY_BREAK
  case 88:
  YY_RULE_SETUP
! #line 534 "cpp.l"
  { lineCount() ;
  					  current->program += yytext ;
  					  ++bracketCount ;
--- 2345,2377 ----
  	YY_BREAK
  case 84:
  YY_RULE_SETUP
! #line 527 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( SubDocComment ) ;
  					}
  	YY_BREAK
  case 85:
  YY_RULE_SETUP
! #line 530 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( SubDocCppComment ) ;
  					}
  	YY_BREAK
  case 86:
  YY_RULE_SETUP
! #line 533 "cpp.l"
  { current->program += *yytext ; }
  	YY_BREAK
  case 87:
  YY_RULE_SETUP
! #line 534 "cpp.l"
  { current->program += *yytext ;
  					  ++yyLineNr ;
  					}
  	YY_BREAK
  case 88:
  YY_RULE_SETUP
! #line 537 "cpp.l"
  { lineCount() ;
  					  current->program += yytext ;
  					  ++bracketCount ;
***************
*** 2376,2382 ****
  	YY_BREAK
  case 89:
  YY_RULE_SETUP
! #line 538 "cpp.l"
  { lineCount() ;
  					  if( bracketCount )
  					  {
--- 2379,2385 ----
  	YY_BREAK
  case 89:
  YY_RULE_SETUP
! #line 541 "cpp.l"
  { lineCount() ;
  					  if( bracketCount )
  					  {
***************
*** 2395,2435 ****
  	YY_BREAK
  case 90:
  YY_RULE_SETUP
! #line 554 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 91:
  YY_RULE_SETUP
! #line 555 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 92:
  YY_RULE_SETUP
! #line 556 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 93:
  YY_RULE_SETUP
! #line 557 "cpp.l"
  { current->program += yytext ;
  					  ++yyLineNr ;
  					}
  	YY_BREAK
  case 94:
  YY_RULE_SETUP
! #line 560 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( SubDoc ) ;
  					}
  	YY_BREAK
  case 95:
  YY_RULE_SETUP
! #line 564 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 96:
  YY_RULE_SETUP
! #line 565 "cpp.l"
  { current->program += yytext ;
  					  ++yyLineNr ;
  					  BEGIN( SubDoc ) ;
--- 2398,2438 ----
  	YY_BREAK
  case 90:
  YY_RULE_SETUP
! #line 557 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 91:
  YY_RULE_SETUP
! #line 558 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 92:
  YY_RULE_SETUP
! #line 559 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 93:
  YY_RULE_SETUP
! #line 560 "cpp.l"
  { current->program += yytext ;
  					  ++yyLineNr ;
  					}
  	YY_BREAK
  case 94:
  YY_RULE_SETUP
! #line 563 "cpp.l"
  { current->program += yytext ;
  					  BEGIN( SubDoc ) ;
  					}
  	YY_BREAK
  case 95:
  YY_RULE_SETUP
! #line 567 "cpp.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 96:
  YY_RULE_SETUP
! #line 568 "cpp.l"
  { current->program += yytext ;
  					  ++yyLineNr ;
  					  BEGIN( SubDoc ) ;
***************
*** 2437,2470 ****
  	YY_BREAK
  case 97:
  YY_RULE_SETUP
! #line 570 "cpp.l"
  { current->memo += yytext ;
  					  current->doc  += yytext ; }
  	YY_BREAK
  case 98:
  YY_RULE_SETUP
! #line 572 "cpp.l"
  { BEGIN( CppDoc ) ;
  					  current->doc  += yytext ; }
  	YY_BREAK
  case 99:
  YY_RULE_SETUP
! #line 574 "cpp.l"
  { current->doc  += *yytext ; }
  	YY_BREAK
  case 100:
  YY_RULE_SETUP
! #line 575 "cpp.l"
  { current->memo += yytext ; }
  	YY_BREAK
  case 101:
  YY_RULE_SETUP
! #line 576 "cpp.l"
  { current->doc  += yytext ; }
  	YY_BREAK
  case 102:
  YY_RULE_SETUP
! #line 578 "cpp.l"
  {
  					  current->see.append(
  					      new McString
--- 2440,2473 ----
  	YY_BREAK
  case 97:
  YY_RULE_SETUP
! #line 573 "cpp.l"
  { current->memo += yytext ;
  					  current->doc  += yytext ; }
  	YY_BREAK
  case 98:
  YY_RULE_SETUP
! #line 575 "cpp.l"
  { BEGIN( CppDoc ) ;
  					  current->doc  += yytext ; }
  	YY_BREAK
  case 99:
  YY_RULE_SETUP
! #line 577 "cpp.l"
  { current->doc  += *yytext ; }
  	YY_BREAK
  case 100:
  YY_RULE_SETUP
! #line 578 "cpp.l"
  { current->memo += yytext ; }
  	YY_BREAK
  case 101:
  YY_RULE_SETUP
! #line 579 "cpp.l"
  { current->doc  += yytext ; }
  	YY_BREAK
  case 102:
  YY_RULE_SETUP
! #line 581 "cpp.l"
  {
  					  current->see.append(
  					      new McString
***************
*** 2474,2492 ****
  	YY_BREAK
  case 103:
  YY_RULE_SETUP
! #line 584 "cpp.l"
  {
  					  BEGIN( Author ) ; }
  	YY_BREAK
  case 104:
  YY_RULE_SETUP
! #line 586 "cpp.l"
  {
  					  BEGIN( Version ) ; }
  	YY_BREAK
  case 105:
  YY_RULE_SETUP
! #line 588 "cpp.l"
  {
  					  current->param.append(
  					      new McString
--- 2477,2495 ----
  	YY_BREAK
  case 103:
  YY_RULE_SETUP
! #line 587 "cpp.l"
  {
  					  BEGIN( Author ) ; }
  	YY_BREAK
  case 104:
  YY_RULE_SETUP
! #line 589 "cpp.l"
  {
  					  BEGIN( Version ) ; }
  	YY_BREAK
  case 105:
  YY_RULE_SETUP
! #line 591 "cpp.l"
  {
  					  current->param.append(
  					      new McString
***************
*** 2496,2502 ****
  	YY_BREAK
  case 106:
  YY_RULE_SETUP
! #line 594 "cpp.l"
  {
  					  current->exception.append(
  						new McString
--- 2499,2505 ----
  	YY_BREAK
  case 106:
  YY_RULE_SETUP
! #line 597 "cpp.l"
  {
  					  current->exception.append(
  						new McString
***************
*** 2506,2518 ****
  	YY_BREAK
  case 107:
  YY_RULE_SETUP
! #line 600 "cpp.l"
  {
  					  BEGIN( Return ) ; }
  	YY_BREAK
  case 108:
  YY_RULE_SETUP
! #line 602 "cpp.l"
  {
  					  current->name.clear() ;
  					  current->section = MANUAL_SEC ;
--- 2509,2521 ----
  	YY_BREAK
  case 107:
  YY_RULE_SETUP
! #line 603 "cpp.l"
  {
  					  BEGIN( Return ) ; }
  	YY_BREAK
  case 108:
  YY_RULE_SETUP
! #line 605 "cpp.l"
  {
  					  current->name.clear() ;
  					  current->section = MANUAL_SEC ;
***************
*** 2521,2527 ****
  	YY_BREAK
  case 109:
  YY_RULE_SETUP
! #line 607 "cpp.l"
  {
  					  current->memo.clear() ;
  					  BEGIN( Memo ) ;
--- 2524,2530 ----
  	YY_BREAK
  case 109:
  YY_RULE_SETUP
! #line 610 "cpp.l"
  {
  					  current->memo.clear() ;
  					  BEGIN( Memo ) ;
***************
*** 2529,2535 ****
  	YY_BREAK
  case 110:
  YY_RULE_SETUP
! #line 612 "cpp.l"
  {
  					  current->type.clear() ;
  					  BEGIN( Type ) ;
--- 2532,2538 ----
  	YY_BREAK
  case 110:
  YY_RULE_SETUP
! #line 615 "cpp.l"
  {
  					  current->type.clear() ;
  					  BEGIN( Type ) ;
***************
*** 2537,2543 ****
  	YY_BREAK
  case 111:
  YY_RULE_SETUP
! #line 616 "cpp.l"
  {
  					  current->args.clear() ;
  					  BEGIN( Args ) ;
--- 2540,2546 ----
  	YY_BREAK
  case 111:
  YY_RULE_SETUP
! #line 619 "cpp.l"
  {
  					  current->args.clear() ;
  					  BEGIN( Args ) ;
***************
*** 2545,2692 ****
  	YY_BREAK
  case 112:
  YY_RULE_SETUP
! #line 621 "cpp.l"
  { current->name = yytext ; }
  	YY_BREAK
  case 113:
  YY_RULE_SETUP
! #line 622 "cpp.l"
  { BEGIN( CppDoc ) ; }
  	YY_BREAK
  case 114:
  YY_RULE_SETUP
! #line 624 "cpp.l"
  { current->type = yytext ; }
  	YY_BREAK
  case 115:
  YY_RULE_SETUP
! #line 625 "cpp.l"
  { BEGIN( CppDoc ) ; }
  	YY_BREAK
  case 116:
  YY_RULE_SETUP
! #line 627 "cpp.l"
  { current->args = yytext ; }
  	YY_BREAK
  case 117:
  YY_RULE_SETUP
! #line 628 "cpp.l"
  { BEGIN( CppDoc ) ; }
  	YY_BREAK
  case 118:
  YY_RULE_SETUP
! #line 630 "cpp.l"
  { current->author  += *yytext ; }
  	YY_BREAK
  case 119:
  YY_RULE_SETUP
! #line 631 "cpp.l"
  { current->version += *yytext ; }
  	YY_BREAK
  case 120:
  YY_RULE_SETUP
! #line 632 "cpp.l"
  { *(current->see.last())       += *yytext ; }
  	YY_BREAK
  case 121:
  YY_RULE_SETUP
! #line 633 "cpp.l"
  { *(current->param.last())     += *yytext ; }
  	YY_BREAK
  case 122:
  YY_RULE_SETUP
! #line 634 "cpp.l"
  { *(current->exception.last()) += *yytext ; }
  	YY_BREAK
  case 123:
  YY_RULE_SETUP
! #line 635 "cpp.l"
  { current->memo    += *yytext ; }
  	YY_BREAK
  case 124:
  YY_RULE_SETUP
! #line 636 "cpp.l"
  { current->retrn   += *yytext ; }
  	YY_BREAK
  case 125:
  YY_RULE_SETUP
! #line 638 "cpp.l"
  { current->author  += '\n' ; }
  	YY_BREAK
  case 126:
  YY_RULE_SETUP
! #line 639 "cpp.l"
  { current->version += '\n' ; }
  	YY_BREAK
  case 127:
  YY_RULE_SETUP
! #line 640 "cpp.l"
  { *(current->see.last())       += '\n' ; }
  	YY_BREAK
  case 128:
  YY_RULE_SETUP
! #line 641 "cpp.l"
  { *(current->param.last())     += '\n' ; }
  	YY_BREAK
  case 129:
  YY_RULE_SETUP
! #line 642 "cpp.l"
  { *(current->exception.last()) += '\n' ; }
  	YY_BREAK
  case 130:
  YY_RULE_SETUP
! #line 643 "cpp.l"
  { current->memo    += *yytext ; }
  	YY_BREAK
  case 131:
  YY_RULE_SETUP
! #line 644 "cpp.l"
  { current->retrn   += *yytext ; }
  	YY_BREAK
  case 132:
  YY_RULE_SETUP
! #line 646 "cpp.l"
  
  	YY_BREAK
  case 133:
  YY_RULE_SETUP
! #line 647 "cpp.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 134:
  YY_RULE_SETUP
! #line 648 "cpp.l"
  { lastCContext = YY_START ;
  					  BEGIN( SkipComment ) ;
  					}
  	YY_BREAK
  case 135:
  YY_RULE_SETUP
! #line 651 "cpp.l"
  
  	YY_BREAK
  case 136:
  YY_RULE_SETUP
! #line 652 "cpp.l"
  { BEGIN( lastCContext ) ; }
  	YY_BREAK
  case 137:
  YY_RULE_SETUP
! #line 653 "cpp.l"
  { lastCContext = YY_START ;
  					  BEGIN( SkipCxxComment ) ;
  					}
  	YY_BREAK
  case 138:
  YY_RULE_SETUP
! #line 656 "cpp.l"
  { yyLineNr++ ;
  					  BEGIN( lastCContext ) ;
  					}
  	YY_BREAK
  case 139:
  YY_RULE_SETUP
! #line 659 "cpp.l"
  ECHO;
  	YY_BREAK
  			case YY_STATE_EOF(INITIAL):
--- 2548,2695 ----
  	YY_BREAK
  case 112:
  YY_RULE_SETUP
! #line 624 "cpp.l"
  { current->name = yytext ; }
  	YY_BREAK
  case 113:
  YY_RULE_SETUP
! #line 625 "cpp.l"
  { BEGIN( CppDoc ) ; }
  	YY_BREAK
  case 114:
  YY_RULE_SETUP
! #line 627 "cpp.l"
  { current->type = yytext ; }
  	YY_BREAK
  case 115:
  YY_RULE_SETUP
! #line 628 "cpp.l"
  { BEGIN( CppDoc ) ; }
  	YY_BREAK
  case 116:
  YY_RULE_SETUP
! #line 630 "cpp.l"
  { current->args = yytext ; }
  	YY_BREAK
  case 117:
  YY_RULE_SETUP
! #line 631 "cpp.l"
  { BEGIN( CppDoc ) ; }
  	YY_BREAK
  case 118:
  YY_RULE_SETUP
! #line 633 "cpp.l"
  { current->author  += *yytext ; }
  	YY_BREAK
  case 119:
  YY_RULE_SETUP
! #line 634 "cpp.l"
  { current->version += *yytext ; }
  	YY_BREAK
  case 120:
  YY_RULE_SETUP
! #line 635 "cpp.l"
  { *(current->see.last())       += *yytext ; }
  	YY_BREAK
  case 121:
  YY_RULE_SETUP
! #line 636 "cpp.l"
  { *(current->param.last())     += *yytext ; }
  	YY_BREAK
  case 122:
  YY_RULE_SETUP
! #line 637 "cpp.l"
  { *(current->exception.last()) += *yytext ; }
  	YY_BREAK
  case 123:
  YY_RULE_SETUP
! #line 638 "cpp.l"
  { current->memo    += *yytext ; }
  	YY_BREAK
  case 124:
  YY_RULE_SETUP
! #line 639 "cpp.l"
  { current->retrn   += *yytext ; }
  	YY_BREAK
  case 125:
  YY_RULE_SETUP
! #line 641 "cpp.l"
  { current->author  += '\n' ; }
  	YY_BREAK
  case 126:
  YY_RULE_SETUP
! #line 642 "cpp.l"
  { current->version += '\n' ; }
  	YY_BREAK
  case 127:
  YY_RULE_SETUP
! #line 643 "cpp.l"
  { *(current->see.last())       += '\n' ; }
  	YY_BREAK
  case 128:
  YY_RULE_SETUP
! #line 644 "cpp.l"
  { *(current->param.last())     += '\n' ; }
  	YY_BREAK
  case 129:
  YY_RULE_SETUP
! #line 645 "cpp.l"
  { *(current->exception.last()) += '\n' ; }
  	YY_BREAK
  case 130:
  YY_RULE_SETUP
! #line 646 "cpp.l"
  { current->memo    += *yytext ; }
  	YY_BREAK
  case 131:
  YY_RULE_SETUP
! #line 647 "cpp.l"
  { current->retrn   += *yytext ; }
  	YY_BREAK
  case 132:
  YY_RULE_SETUP
! #line 649 "cpp.l"
  
  	YY_BREAK
  case 133:
  YY_RULE_SETUP
! #line 650 "cpp.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 134:
  YY_RULE_SETUP
! #line 651 "cpp.l"
  { lastCContext = YY_START ;
  					  BEGIN( SkipComment ) ;
  					}
  	YY_BREAK
  case 135:
  YY_RULE_SETUP
! #line 654 "cpp.l"
  
  	YY_BREAK
  case 136:
  YY_RULE_SETUP
! #line 655 "cpp.l"
  { BEGIN( lastCContext ) ; }
  	YY_BREAK
  case 137:
  YY_RULE_SETUP
! #line 656 "cpp.l"
  { lastCContext = YY_START ;
  					  BEGIN( SkipCxxComment ) ;
  					}
  	YY_BREAK
  case 138:
  YY_RULE_SETUP
! #line 659 "cpp.l"
  { yyLineNr++ ;
  					  BEGIN( lastCContext ) ;
  					}
  	YY_BREAK
  case 139:
  YY_RULE_SETUP
! #line 662 "cpp.l"
  ECHO;
  	YY_BREAK
  			case YY_STATE_EOF(INITIAL):
***************
*** 2910,2916 ****
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_n_chars = 0;
  
  	else
  		{
--- 2913,2919 ----
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
  
  	else
  		{
***************
*** 2965,2970 ****
--- 2968,2975 ----
  		/* Read in more data. */
  		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
  			yy_n_chars, num_to_read );
+ 
+ 		yy_current_buffer->yy_n_chars = yy_n_chars;
  		}
  
  	if ( yy_n_chars == 0 )
***************
*** 3084,3090 ****
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
--- 3089,3096 ----
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_current_buffer->yy_n_chars =
! 			yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
***************
*** 3127,3139 ****
  
  			switch ( yy_get_next_buffer() )
  				{
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
- 						{
- 						yy_c_buf_p = yytext_ptr + offset;
  						return EOF;
- 						}
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
--- 3133,3158 ----
  
  			switch ( yy_get_next_buffer() )
  				{
+ 				case EOB_ACT_LAST_MATCH:
+ 					/* This happens because yy_g_n_b()
+ 					 * sees that we've accumulated a
+ 					 * token and flags that we need to
+ 					 * try matching the token before
+ 					 * proceeding.  But for input(),
+ 					 * there's no matching to consider.
+ 					 * So convert the EOB_ACT_LAST_MATCH
+ 					 * to EOB_ACT_END_OF_FILE.
+ 					 */
+ 
+ 					/* Reset buffer status. */
+ 					yyrestart( yyin );
+ 
+ 					/* fall through */
+ 
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
  						return EOF;
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
***************
*** 3147,3161 ****
  				case EOB_ACT_CONTINUE_SCAN:
  					yy_c_buf_p = yytext_ptr + offset;
  					break;
- 
- 				case EOB_ACT_LAST_MATCH:
- #ifdef __cplusplus
- 					YY_FATAL_ERROR(
- 					"unexpected last match in yyinput()" );
- #else
- 					YY_FATAL_ERROR(
- 					"unexpected last match in input()" );
- #endif
  				}
  			}
  		}
--- 3166,3171 ----
***************
*** 3320,3325 ****
--- 3330,3338 ----
  #endif
  
  	{
+ 	if ( ! b )
+ 		return;
+ 
  	b->yy_n_chars = 0;
  
  	/* We always need two end-of-buffer characters.  The first causes
***************
*** 3379,3395 ****
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *str )
  #else
! YY_BUFFER_STATE yy_scan_string( str )
! yyconst char *str;
  #endif
  	{
  	int len;
! 	for ( len = 0; str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( str, len );
  	}
  #endif
  
--- 3392,3408 ----
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
  #else
! YY_BUFFER_STATE yy_scan_string( yy_str )
! yyconst char *yy_str;
  #endif
  	{
  	int len;
! 	for ( len = 0; yy_str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( yy_str, len );
  	}
  #endif
  
***************
*** 3598,3604 ****
  	return 0;
  	}
  #endif
! #line 659 "cpp.l"
  
  
  
--- 3611,3617 ----
  	return 0;
  	}
  #endif
! #line 662 "cpp.l"
  
  
  
diff -c src/cpp.l src-g++-2.8.1/cpp.l
*** src/cpp.l	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/cpp.l	Tue Sep 15 09:35:44 1998
***************
*** 49,59 ****
  
  static int		yyLineNr = 0 ;
  static char		yyFileName[264] ;
! static McString*	currentString ;
  
  static void	setSection( int	sec )
  {
  }
  
  static void	msg( const char* str, const char* str2=0 )
  {
--- 49,62 ----
  
  static int		yyLineNr = 0 ;
  static char		yyFileName[264] ;
! // static McString*	currentString ; Not used! 9/15/98 jhrg
  
+ #if 0
+ // Not used. 9/15/98 jhrg
  static void	setSection( int	sec )
  {
  }
+ #endif
  
  static void	msg( const char* str, const char* str2=0 )
  {
Only in src-g++-2.8.1: cpp.o
Only in src-g++-2.8.1: doc++
diff -c src/doc.cpp src-g++-2.8.1/doc.cpp
*** src/doc.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/doc.cpp	Tue Sep 15 11:43:10 1998
***************
*** 19,25 ****
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
--- 19,25 ----
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
***************
*** 254,260 ****
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
--- 254,260 ----
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
***************
*** 975,981 ****
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_n_chars = 0;
  
  	else
  		{
--- 975,981 ----
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
  
  	else
  		{
***************
*** 1030,1035 ****
--- 1030,1037 ----
  		/* Read in more data. */
  		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
  			yy_n_chars, num_to_read );
+ 
+ 		yy_current_buffer->yy_n_chars = yy_n_chars;
  		}
  
  	if ( yy_n_chars == 0 )
***************
*** 1154,1160 ****
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
--- 1156,1163 ----
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_current_buffer->yy_n_chars =
! 			yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
***************
*** 1197,1209 ****
  
  			switch ( yy_get_next_buffer() )
  				{
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
- 						{
- 						yy_c_buf_p = yytext_ptr + offset;
  						return EOF;
- 						}
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
--- 1200,1225 ----
  
  			switch ( yy_get_next_buffer() )
  				{
+ 				case EOB_ACT_LAST_MATCH:
+ 					/* This happens because yy_g_n_b()
+ 					 * sees that we've accumulated a
+ 					 * token and flags that we need to
+ 					 * try matching the token before
+ 					 * proceeding.  But for input(),
+ 					 * there's no matching to consider.
+ 					 * So convert the EOB_ACT_LAST_MATCH
+ 					 * to EOB_ACT_END_OF_FILE.
+ 					 */
+ 
+ 					/* Reset buffer status. */
+ 					yyrestart( yyin );
+ 
+ 					/* fall through */
+ 
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
  						return EOF;
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
***************
*** 1217,1231 ****
  				case EOB_ACT_CONTINUE_SCAN:
  					yy_c_buf_p = yytext_ptr + offset;
  					break;
- 
- 				case EOB_ACT_LAST_MATCH:
- #ifdef __cplusplus
- 					YY_FATAL_ERROR(
- 					"unexpected last match in yyinput()" );
- #else
- 					YY_FATAL_ERROR(
- 					"unexpected last match in input()" );
- #endif
  				}
  			}
  		}
--- 1233,1238 ----
***************
*** 1389,1394 ****
--- 1396,1404 ----
  #endif
  
  	{
+ 	if ( ! b )
+ 		return;
+ 
  	b->yy_n_chars = 0;
  
  	/* We always need two end-of-buffer characters.  The first causes
***************
*** 1448,1464 ****
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *str )
  #else
! YY_BUFFER_STATE yy_scan_string( str )
! yyconst char *str;
  #endif
  	{
  	int len;
! 	for ( len = 0; str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( str, len );
  	}
  #endif
  
--- 1458,1474 ----
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
  #else
! YY_BUFFER_STATE yy_scan_string( yy_str )
! yyconst char *yy_str;
  #endif
  	{
  	int len;
! 	for ( len = 0; yy_str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( yy_str, len );
  	}
  #endif
  
Only in src-g++-2.8.1: doc.o
diff -c src/doc2html.cpp src-g++-2.8.1/doc2html.cpp
*** src/doc2html.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/doc2html.cpp	Tue Sep 15 11:43:45 1998
***************
*** 19,25 ****
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
--- 19,25 ----
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
***************
*** 254,260 ****
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
--- 254,260 ----
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
***************
*** 1747,1753 ****
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_n_chars = 0;
  
  	else
  		{
--- 1747,1753 ----
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
  
  	else
  		{
***************
*** 1802,1807 ****
--- 1802,1809 ----
  		/* Read in more data. */
  		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
  			yy_n_chars, num_to_read );
+ 
+ 		yy_current_buffer->yy_n_chars = yy_n_chars;
  		}
  
  	if ( yy_n_chars == 0 )
***************
*** 1926,1932 ****
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
--- 1928,1935 ----
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_current_buffer->yy_n_chars =
! 			yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
***************
*** 1969,1981 ****
  
  			switch ( yy_get_next_buffer() )
  				{
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
- 						{
- 						yy_c_buf_p = yytext_ptr + offset;
  						return EOF;
- 						}
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
--- 1972,1997 ----
  
  			switch ( yy_get_next_buffer() )
  				{
+ 				case EOB_ACT_LAST_MATCH:
+ 					/* This happens because yy_g_n_b()
+ 					 * sees that we've accumulated a
+ 					 * token and flags that we need to
+ 					 * try matching the token before
+ 					 * proceeding.  But for input(),
+ 					 * there's no matching to consider.
+ 					 * So convert the EOB_ACT_LAST_MATCH
+ 					 * to EOB_ACT_END_OF_FILE.
+ 					 */
+ 
+ 					/* Reset buffer status. */
+ 					yyrestart( yyin );
+ 
+ 					/* fall through */
+ 
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
  						return EOF;
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
***************
*** 1989,2003 ****
  				case EOB_ACT_CONTINUE_SCAN:
  					yy_c_buf_p = yytext_ptr + offset;
  					break;
- 
- 				case EOB_ACT_LAST_MATCH:
- #ifdef __cplusplus
- 					YY_FATAL_ERROR(
- 					"unexpected last match in yyinput()" );
- #else
- 					YY_FATAL_ERROR(
- 					"unexpected last match in input()" );
- #endif
  				}
  			}
  		}
--- 2005,2010 ----
***************
*** 2161,2166 ****
--- 2168,2176 ----
  #endif
  
  	{
+ 	if ( ! b )
+ 		return;
+ 
  	b->yy_n_chars = 0;
  
  	/* We always need two end-of-buffer characters.  The first causes
***************
*** 2220,2236 ****
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *str )
  #else
! YY_BUFFER_STATE yy_scan_string( str )
! yyconst char *str;
  #endif
  	{
  	int len;
! 	for ( len = 0; str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( str, len );
  	}
  #endif
  
--- 2230,2246 ----
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
  #else
! YY_BUFFER_STATE yy_scan_string( yy_str )
! yyconst char *yy_str;
  #endif
  	{
  	int len;
! 	for ( len = 0; yy_str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( yy_str, len );
  	}
  #endif
  
Only in src-g++-2.8.1: doc2html.o
diff -c src/doc2tex.cpp src-g++-2.8.1/doc2tex.cpp
*** src/doc2tex.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/doc2tex.cpp	Tue Sep 15 11:43:14 1998
***************
*** 19,25 ****
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
--- 19,25 ----
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
***************
*** 254,260 ****
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
--- 254,260 ----
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
***************
*** 1029,1035 ****
  			    {
  				McString	tmp = yytext ;
  				ref = getRefEntry( tmp, current ) ;
! 				ref == noref ;
  			    }
  			    REJECT ;
  			}
--- 1029,1035 ----
  			    {
  				McString	tmp = yytext ;
  				ref = getRefEntry( tmp, current ) ;
! 				// ref == noref ; No effect! 9/15/98 jhrg 
  			    }
  			    REJECT ;
  			}
***************
*** 1075,1088 ****
  case 11:
  YY_RULE_SETUP
  #line 165 "doc2tex.l"
! { fprintf( out, "}\\strut{} --- ", yytext ) ;
  			  BEGIN( 0 ) ;
  			}
  	YY_BREAK
  case 12:
  YY_RULE_SETUP
  #line 168 "doc2tex.l"
! { fprintf( out, "}\\strut{} --- ", yytext ) ;
  			  BEGIN( HTML ) ;
  			}
  	YY_BREAK
--- 1075,1088 ----
  case 11:
  YY_RULE_SETUP
  #line 165 "doc2tex.l"
! { fprintf( out, "}\\strut{} --- ") ;
  			  BEGIN( 0 ) ;
  			}
  	YY_BREAK
  case 12:
  YY_RULE_SETUP
  #line 168 "doc2tex.l"
! { fprintf( out, "}\\strut{} --- ") ;
  			  BEGIN( HTML ) ;
  			}
  	YY_BREAK
***************
*** 1832,1838 ****
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_n_chars = 0;
  
  	else
  		{
--- 1832,1838 ----
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
  
  	else
  		{
***************
*** 1887,1892 ****
--- 1887,1894 ----
  		/* Read in more data. */
  		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
  			yy_n_chars, num_to_read );
+ 
+ 		yy_current_buffer->yy_n_chars = yy_n_chars;
  		}
  
  	if ( yy_n_chars == 0 )
***************
*** 2006,2012 ****
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
--- 2008,2015 ----
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_current_buffer->yy_n_chars =
! 			yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
***************
*** 2049,2061 ****
  
  			switch ( yy_get_next_buffer() )
  				{
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
- 						{
- 						yy_c_buf_p = yytext_ptr + offset;
  						return EOF;
- 						}
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
--- 2052,2077 ----
  
  			switch ( yy_get_next_buffer() )
  				{
+ 				case EOB_ACT_LAST_MATCH:
+ 					/* This happens because yy_g_n_b()
+ 					 * sees that we've accumulated a
+ 					 * token and flags that we need to
+ 					 * try matching the token before
+ 					 * proceeding.  But for input(),
+ 					 * there's no matching to consider.
+ 					 * So convert the EOB_ACT_LAST_MATCH
+ 					 * to EOB_ACT_END_OF_FILE.
+ 					 */
+ 
+ 					/* Reset buffer status. */
+ 					yyrestart( yyin );
+ 
+ 					/* fall through */
+ 
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
  						return EOF;
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
***************
*** 2069,2083 ****
  				case EOB_ACT_CONTINUE_SCAN:
  					yy_c_buf_p = yytext_ptr + offset;
  					break;
- 
- 				case EOB_ACT_LAST_MATCH:
- #ifdef __cplusplus
- 					YY_FATAL_ERROR(
- 					"unexpected last match in yyinput()" );
- #else
- 					YY_FATAL_ERROR(
- 					"unexpected last match in input()" );
- #endif
  				}
  			}
  		}
--- 2085,2090 ----
***************
*** 2242,2247 ****
--- 2249,2257 ----
  #endif
  
  	{
+ 	if ( ! b )
+ 		return;
+ 
  	b->yy_n_chars = 0;
  
  	/* We always need two end-of-buffer characters.  The first causes
***************
*** 2301,2317 ****
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *str )
  #else
! YY_BUFFER_STATE yy_scan_string( str )
! yyconst char *str;
  #endif
  	{
  	int len;
! 	for ( len = 0; str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( str, len );
  	}
  #endif
  
--- 2311,2327 ----
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
  #else
! YY_BUFFER_STATE yy_scan_string( yy_str )
! yyconst char *yy_str;
  #endif
  	{
  	int len;
! 	for ( len = 0; yy_str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( yy_str, len );
  	}
  #endif
  
diff -c src/doc2tex.l src-g++-2.8.1/doc2tex.l
*** src/doc2tex.l	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/doc2tex.l	Tue Sep 15 09:25:57 1998
***************
*** 135,141 ****
  			    {
  				McString	tmp = yytext ;
  				ref = getRefEntry( tmp, current ) ;
! 				ref == noref ;
  			    }
  			    REJECT ;
  			}
--- 135,141 ----
  			    {
  				McString	tmp = yytext ;
  				ref = getRefEntry( tmp, current ) ;
! 				// ref == noref ; No effect! 9/15/98 jhrg 
  			    }
  			    REJECT ;
  			}
***************
*** 162,171 ****
  <LVerb>"#"		{ fprintf( out, "}" ) ;
  			  BEGIN(Comment) ; 
  			}
! <TeXlist>[ \t\n]*	{ fprintf( out, "}\\strut{} --- ", yytext ) ;
  			  BEGIN( 0 ) ;
  			}
! <HTMLlist>[ \t\n]*	{ fprintf( out, "}\\strut{} --- ", yytext ) ;
  			  BEGIN( HTML ) ;
  			}
  
--- 162,171 ----
  <LVerb>"#"		{ fprintf( out, "}" ) ;
  			  BEGIN(Comment) ; 
  			}
! <TeXlist>[ \t\n]*	{ fprintf( out, "}\\strut{} --- ") ;
  			  BEGIN( 0 ) ;
  			}
! <HTMLlist>[ \t\n]*	{ fprintf( out, "}\\strut{} --- ") ;
  			  BEGIN( HTML ) ;
  			}
  
Only in src-g++-2.8.1: doc2tex.o
Only in src-g++-2.8.1: docify
diff -c src/docify.cpp src-g++-2.8.1/docify.cpp
*** src/docify.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/docify.cpp	Tue Sep 15 11:44:15 1998
***************
*** 1,7 ****
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
--- 1,7 ----
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
***************
*** 236,242 ****
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
--- 236,242 ----
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
***************
*** 2531,2537 ****
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_n_chars = 0;
  
  	else
  		{
--- 2531,2537 ----
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
  
  	else
  		{
***************
*** 2586,2591 ****
--- 2586,2593 ----
  		/* Read in more data. */
  		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
  			yy_n_chars, num_to_read );
+ 
+ 		yy_current_buffer->yy_n_chars = yy_n_chars;
  		}
  
  	if ( yy_n_chars == 0 )
***************
*** 2705,2711 ****
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
--- 2707,2714 ----
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_current_buffer->yy_n_chars =
! 			yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
***************
*** 2748,2760 ****
  
  			switch ( yy_get_next_buffer() )
  				{
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
- 						{
- 						yy_c_buf_p = yytext_ptr + offset;
  						return EOF;
- 						}
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
--- 2751,2776 ----
  
  			switch ( yy_get_next_buffer() )
  				{
+ 				case EOB_ACT_LAST_MATCH:
+ 					/* This happens because yy_g_n_b()
+ 					 * sees that we've accumulated a
+ 					 * token and flags that we need to
+ 					 * try matching the token before
+ 					 * proceeding.  But for input(),
+ 					 * there's no matching to consider.
+ 					 * So convert the EOB_ACT_LAST_MATCH
+ 					 * to EOB_ACT_END_OF_FILE.
+ 					 */
+ 
+ 					/* Reset buffer status. */
+ 					yyrestart( yyin );
+ 
+ 					/* fall through */
+ 
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
  						return EOF;
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
***************
*** 2768,2782 ****
  				case EOB_ACT_CONTINUE_SCAN:
  					yy_c_buf_p = yytext_ptr + offset;
  					break;
- 
- 				case EOB_ACT_LAST_MATCH:
- #ifdef __cplusplus
- 					YY_FATAL_ERROR(
- 					"unexpected last match in yyinput()" );
- #else
- 					YY_FATAL_ERROR(
- 					"unexpected last match in input()" );
- #endif
  				}
  			}
  		}
--- 2784,2789 ----
***************
*** 2940,2945 ****
--- 2947,2955 ----
  #endif
  
  	{
+ 	if ( ! b )
+ 		return;
+ 
  	b->yy_n_chars = 0;
  
  	/* We always need two end-of-buffer characters.  The first causes
***************
*** 2999,3015 ****
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *str )
  #else
! YY_BUFFER_STATE yy_scan_string( str )
! yyconst char *str;
  #endif
  	{
  	int len;
! 	for ( len = 0; str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( str, len );
  	}
  #endif
  
--- 3009,3025 ----
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
  #else
! YY_BUFFER_STATE yy_scan_string( yy_str )
! yyconst char *yy_str;
  #endif
  	{
  	int len;
! 	for ( len = 0; yy_str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( yy_str, len );
  	}
  #endif
  
Only in src-g++-2.8.1: docify.o
Only in src-g++-2.8.1: down.gif
Only in src-g++-2.8.1: dxxgifs.tex
Only in src-g++-2.8.1: gifs.db
diff -c src/html.cpp src-g++-2.8.1/html.cpp
*** src/html.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/html.cpp	Tue Sep 15 10:31:44 1998
***************
*** 173,178 ****
--- 173,179 ----
  	}
      };
  public:
+     virtual ~MemberWriter() {}	// Added. 9/15/98 jhrg
      virtual void sort() {
  	EntryCompare comp;
  	if (list.size())
***************
*** 199,204 ****
--- 200,206 ----
      virtual char* endString() {return "</TABLE>";};
      virtual void writeMember(Entry *e, int links,int withSub=1);
  public:
+     virtual ~MemberWriterTable() {} // Added. 9/15/98 jhrg
  };
  
  class SortedList : public MemberWriter
***************
*** 223,229 ****
      };
      void addString(const char *name,const char *string);
      void write(FILE *f);
!     ~SortedList();
  };
  
  void SortedList::write(FILE *f)
--- 225,231 ----
      };
      void addString(const char *name,const char *string);
      void write(FILE *f);
!     virtual ~SortedList();
  };
  
  void SortedList::write(FILE *f)
***************
*** 627,633 ****
  void writeTOC(FILE *f)
  {
      
!     int *index=new int[root->sublist.size()+1];
      
      //fprintf(f,"<html><head><TITLE>Table of Contents</TITLE></head>\n");
  
--- 629,635 ----
  void writeTOC(FILE *f)
  {
      
!     // int *index=new int[root->sublist.size()+1]; Not used. 9/15/98 jhrg
      
      //fprintf(f,"<html><head><TITLE>Table of Contents</TITLE></head>\n");
  
***************
*** 1317,1323 ****
  }
  
  
! void dumpFile(const char *dir,const char *name,const unsigned char *data,int size)
  {
    FILE *f=myOpen(dir,name);
    fwrite(data,1,size,f);
--- 1319,1326 ----
  }
  
  
! void dumpFile(const char *dir,const char *name,const unsigned char *data,
! 	      int size)
  {
    FILE *f=myOpen(dir,name);
    fwrite(data,1,size,f);
***************
*** 1328,1359 ****
  {
    FILE *f;
    int c;
!   if (f=fopen("indexHeader.inc","r")) {
      indexHeader=" ";
      while ((c=fgetc(f)) != EOF) indexHeader+=c;
      fclose(f);
    }
!   if (f=fopen("indexFooter.inc","r")) {
      indexFooter=" ";
      while ((c=fgetc(f)) != EOF) indexFooter+=c;
      fclose(f);
    }
!   if (f=fopen("hierHeader.inc","r")) {
      hierHeader=" ";
      while ((c=fgetc(f)) != EOF) hierHeader+=c;
      fclose(f);
    }
!   if (f=fopen("hierFooter.inc","r")) {
      hierFooter=" ";
      while ((c=fgetc(f)) != EOF) hierFooter+=c;
      fclose(f);
    }
!   if (f=fopen("classHeader.inc","r")) {
      pageHeader=" ";
      while ((c=fgetc(f)) != EOF) pageHeader+=c;
      fclose(f);
    }
!   if (f=fopen("classFooter.inc","r")) {
      pageFooter=" ";
      while ((c=fgetc(f)) != EOF) pageFooter+=c;
      fclose(f);
--- 1331,1362 ----
  {
    FILE *f;
    int c;
!   if ((f=fopen("indexHeader.inc","r"))) {
      indexHeader=" ";
      while ((c=fgetc(f)) != EOF) indexHeader+=c;
      fclose(f);
    }
!   if ((f=fopen("indexFooter.inc","r"))) {
      indexFooter=" ";
      while ((c=fgetc(f)) != EOF) indexFooter+=c;
      fclose(f);
    }
!   if ((f=fopen("hierHeader.inc","r"))) {
      hierHeader=" ";
      while ((c=fgetc(f)) != EOF) hierHeader+=c;
      fclose(f);
    }
!   if ((f=fopen("hierFooter.inc","r"))) {
      hierFooter=" ";
      while ((c=fgetc(f)) != EOF) hierFooter+=c;
      fclose(f);
    }
!   if ((f=fopen("classHeader.inc","r"))) {
      pageHeader=" ";
      while ((c=fgetc(f)) != EOF) pageHeader+=c;
      fclose(f);
    }
!   if ((f=fopen("classFooter.inc","r"))) {
      pageFooter=" ";
      while ((c=fgetc(f)) != EOF) pageFooter+=c;
      fclose(f);
***************
*** 1435,1441 ****
  	dumpFile(dir,"ClassLayout.class",ClassLayout_class,sizeof(ClassLayout_class));
  	dumpFile(dir,"NavigatorButton.class",NavigatorButton_class,sizeof(NavigatorButton_class));    
    }
- 
  
    char buf[40];
  
--- 1438,1443 ----
Only in src-g++-2.8.1: html.o
Only in src-g++-2.8.1: icon1.gif
Only in src-g++-2.8.1: icon2.gif
diff -c src/java.cpp src-g++-2.8.1/java.cpp
*** src/java.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/java.cpp	Tue Sep 15 11:43:40 1998
***************
*** 19,25 ****
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
--- 19,25 ----
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
***************
*** 254,260 ****
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
--- 254,260 ----
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
***************
*** 780,786 ****
  
  void	here()
  {
-     int i= 0 ;
  }
  
  /* -----------------------------------------------------------------
--- 780,785 ----
***************
*** 994,1000 ****
  	register char *yy_cp, *yy_bp;
  	register int yy_act;
  
! #line 115 "java.l"
  
  
  	if ( yy_init )
--- 993,999 ----
  	register char *yy_cp, *yy_bp;
  	register int yy_act;
  
! #line 114 "java.l"
  
  
  	if ( yy_init )
***************
*** 1081,1087 ****
  
  case 1:
  YY_RULE_SETUP
! #line 116 "java.l"
  { yyLineNr= 1 ; int i;
  						  for( i = 0 ; yytext[i+1] != 6 ; i++ )
  						    yyFileName[i] = yytext[i+1] ;
--- 1080,1086 ----
  
  case 1:
  YY_RULE_SETUP
! #line 115 "java.l"
  { yyLineNr= 1 ; int i;
  						  for( i = 0 ; yytext[i+1] != 6 ; i++ )
  						    yyFileName[i] = yytext[i+1] ;
***************
*** 1091,1130 ****
  	YY_BREAK
  case 2:
  YY_RULE_SETUP
! #line 123 "java.l"
  { current_root = global_root ;
  						  BEGIN( Package ) ;
  						}
  	YY_BREAK
  case 3:
  YY_RULE_SETUP
! #line 126 "java.l"
  { BEGIN( Import ) ; }
  	YY_BREAK
  case 4:
  YY_RULE_SETUP
! #line 128 "java.l"
  { current->protection = PRIV ;
  						  current->type += "public " ;
  						}
  	YY_BREAK
  case 5:
  YY_RULE_SETUP
! #line 131 "java.l"
  { current->protection = PUBL ;
  						  current->type += "public " ;
  						}
  	YY_BREAK
  case 6:
  YY_RULE_SETUP
! #line 134 "java.l"
  { current->protection = PROT ;
  						  current->type += "protected " ;
  						}
  	YY_BREAK
  case 7:
  YY_RULE_SETUP
! #line 137 "java.l"
  { current->section = CLASS_SEC ;
  						  current->type += "class" ;
  						  BEGIN( ClassName ) ;
--- 1090,1129 ----
  	YY_BREAK
  case 2:
  YY_RULE_SETUP
! #line 122 "java.l"
  { current_root = global_root ;
  						  BEGIN( Package ) ;
  						}
  	YY_BREAK
  case 3:
  YY_RULE_SETUP
! #line 125 "java.l"
  { BEGIN( Import ) ; }
  	YY_BREAK
  case 4:
  YY_RULE_SETUP
! #line 127 "java.l"
  { current->protection = PRIV ;
  						  current->type += "public " ;
  						}
  	YY_BREAK
  case 5:
  YY_RULE_SETUP
! #line 130 "java.l"
  { current->protection = PUBL ;
  						  current->type += "public " ;
  						}
  	YY_BREAK
  case 6:
  YY_RULE_SETUP
! #line 133 "java.l"
  { current->protection = PROT ;
  						  current->type += "protected " ;
  						}
  	YY_BREAK
  case 7:
  YY_RULE_SETUP
! #line 136 "java.l"
  { current->section = CLASS_SEC ;
  						  current->type += "class" ;
  						  BEGIN( ClassName ) ;
***************
*** 1132,1138 ****
  	YY_BREAK
  case 8:
  YY_RULE_SETUP
! #line 141 "java.l"
  { current->section = INTERFACE_SEC ;
  						  current->type += "interface" ;
  						  BEGIN( ClassName ) ;
--- 1131,1137 ----
  	YY_BREAK
  case 8:
  YY_RULE_SETUP
! #line 140 "java.l"
  { current->section = INTERFACE_SEC ;
  						  current->type += "interface" ;
  						  BEGIN( ClassName ) ;
***************
*** 1140,1146 ****
  	YY_BREAK
  case 9:
  YY_RULE_SETUP
! #line 146 "java.l"
  { Entry *find = current_root->sub ;
  						  for( ; find ; find = find->next )
  						  {
--- 1139,1145 ----
  	YY_BREAK
  case 9:
  YY_RULE_SETUP
! #line 145 "java.l"
  { Entry *find = current_root->sub ;
  						  for( ; find ; find = find->next )
  						  {
***************
*** 1164,1170 ****
  	YY_BREAK
  case 10:
  YY_RULE_SETUP
! #line 166 "java.l"
  { BEGIN( FindClasses ) ;
  						  if( current->doc.length() )
  						  {
--- 1163,1169 ----
  	YY_BREAK
  case 10:
  YY_RULE_SETUP
! #line 165 "java.l"
  { BEGIN( FindClasses ) ;
  						  if( current->doc.length() )
  						  {
***************
*** 1175,1201 ****
  	YY_BREAK
  case 11:
  YY_RULE_SETUP
! #line 174 "java.l"
  { current->import.append( new McString(yytext) ) ; }
  	YY_BREAK
  case 12:
  YY_RULE_SETUP
! #line 175 "java.l"
  { BEGIN( FindClasses ) ; }
  	YY_BREAK
  case 13:
  YY_RULE_SETUP
! #line 177 "java.l"
  { BEGIN( Extends ) ; }
  	YY_BREAK
  case 14:
  YY_RULE_SETUP
! #line 178 "java.l"
  { BEGIN( Implements ) ; }
  	YY_BREAK
  case 15:
  YY_RULE_SETUP
! #line 179 "java.l"
  { BEGIN( ClassBody ) ;
      						  current->file = yyFileName ;
  						  current->startLine = yyLineNr ;
--- 1174,1200 ----
  	YY_BREAK
  case 11:
  YY_RULE_SETUP
! #line 173 "java.l"
  { current->import.append( new McString(yytext) ) ; }
  	YY_BREAK
  case 12:
  YY_RULE_SETUP
! #line 174 "java.l"
  { BEGIN( FindClasses ) ; }
  	YY_BREAK
  case 13:
  YY_RULE_SETUP
! #line 176 "java.l"
  { BEGIN( Extends ) ; }
  	YY_BREAK
  case 14:
  YY_RULE_SETUP
! #line 177 "java.l"
  { BEGIN( Implements ) ; }
  	YY_BREAK
  case 15:
  YY_RULE_SETUP
! #line 178 "java.l"
  { BEGIN( ClassBody ) ;
      						  current->file = yyFileName ;
  						  current->startLine = yyLineNr ;
***************
*** 1203,1230 ****
  	YY_BREAK
  case 16:
  YY_RULE_SETUP
! #line 183 "java.l"
  { current->name = yytext ;
  						  msg( "found class  ", yytext ) ;
  						}
  	YY_BREAK
  case 17:
  YY_RULE_SETUP
! #line 187 "java.l"
  { current->extends.append( new McString(yytext) ) ;
  						  BEGIN( ClassName ) ;
  						}
  	YY_BREAK
  case 18:
  YY_RULE_SETUP
! #line 190 "java.l"
  { current->implements.append( new McString(yytext) ) ;
  						  BEGIN( ClassName ) ;
  						}
  	YY_BREAK
  case 19:
  YY_RULE_SETUP
! #line 193 "java.l"
  { McString *tmp=new McString(yytext);
  						  lineCount() ;
                                                    tmp->remove(tmp->length()-1);
--- 1202,1229 ----
  	YY_BREAK
  case 16:
  YY_RULE_SETUP
! #line 182 "java.l"
  { current->name = yytext ;
  						  msg( "found class  ", yytext ) ;
  						}
  	YY_BREAK
  case 17:
  YY_RULE_SETUP
! #line 186 "java.l"
  { current->extends.append( new McString(yytext) ) ;
  						  BEGIN( ClassName ) ;
  						}
  	YY_BREAK
  case 18:
  YY_RULE_SETUP
! #line 189 "java.l"
  { current->implements.append( new McString(yytext) ) ;
  						  BEGIN( ClassName ) ;
  						}
  	YY_BREAK
  case 19:
  YY_RULE_SETUP
! #line 192 "java.l"
  { McString *tmp=new McString(yytext);
  						  lineCount() ;
                                                    tmp->remove(tmp->length()-1);
***************
*** 1236,1257 ****
  	YY_BREAK
  case 20:
  YY_RULE_SETUP
! #line 202 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 21:
  YY_RULE_SETUP
! #line 203 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 22:
  YY_RULE_SETUP
! #line 204 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 23:
  YY_RULE_SETUP
! #line 205 "java.l"
  { current->program += yytext ;
  						  lineCount() ;
  						  lastContext = YY_START ;
--- 1235,1256 ----
  	YY_BREAK
  case 20:
  YY_RULE_SETUP
! #line 201 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 21:
  YY_RULE_SETUP
! #line 202 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 22:
  YY_RULE_SETUP
! #line 203 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 23:
  YY_RULE_SETUP
! #line 204 "java.l"
  { current->program += yytext ;
  						  lineCount() ;
  						  lastContext = YY_START ;
***************
*** 1260,1273 ****
  	YY_BREAK
  case 24:
  YY_RULE_SETUP
! #line 210 "java.l"
  { current->program += yytext ;
  						  ++bracketCount ;
  						}
  	YY_BREAK
  case 25:
  YY_RULE_SETUP
! #line 213 "java.l"
  { here() ;
  						if( bracketCount )
  						  {
--- 1259,1272 ----
  	YY_BREAK
  case 24:
  YY_RULE_SETUP
! #line 209 "java.l"
  { current->program += yytext ;
  						  ++bracketCount ;
  						}
  	YY_BREAK
  case 25:
  YY_RULE_SETUP
! #line 212 "java.l"
  { here() ;
  						if( bracketCount )
  						  {
***************
*** 1284,1302 ****
  	YY_BREAK
  case 26:
  YY_RULE_SETUP
! #line 226 "java.l"
  { current->program += yytext ;
  						  yyLineNr++ ;
  						}
  	YY_BREAK
  case 27:
  YY_RULE_SETUP
! #line 229 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 28:
  YY_RULE_SETUP
! #line 233 "java.l"
  { current->name.clear() ;
  						  current->type.clear() ;
  						  current->args.clear() ;
--- 1283,1301 ----
  	YY_BREAK
  case 26:
  YY_RULE_SETUP
! #line 225 "java.l"
  { current->program += yytext ;
  						  yyLineNr++ ;
  						}
  	YY_BREAK
  case 27:
  YY_RULE_SETUP
! #line 228 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 28:
  YY_RULE_SETUP
! #line 232 "java.l"
  { current->name.clear() ;
  						  current->type.clear() ;
  						  current->args.clear() ;
***************
*** 1307,1334 ****
  	YY_BREAK
  case 29:
  YY_RULE_SETUP
! #line 240 "java.l"
  { current->protection = PRIV ;
  						  BEGIN( Member ) ;
  						}
  	YY_BREAK
  case 30:
  YY_RULE_SETUP
! #line 243 "java.l"
  { current->protection = PUBL ;
  						  BEGIN( Member ) ;
  						}
  	YY_BREAK
  case 31:
  YY_RULE_SETUP
! #line 246 "java.l"
  { current->protection = PROT ;
  						  BEGIN( Member ) ;
  						}
  	YY_BREAK
  case 32:
  YY_RULE_SETUP
! #line 250 "java.l"
  { if( current->type.length() )
  						    current->type += ' ' ;
  						  current->type += current->name ;
--- 1306,1333 ----
  	YY_BREAK
  case 29:
  YY_RULE_SETUP
! #line 239 "java.l"
  { current->protection = PRIV ;
  						  BEGIN( Member ) ;
  						}
  	YY_BREAK
  case 30:
  YY_RULE_SETUP
! #line 242 "java.l"
  { current->protection = PUBL ;
  						  BEGIN( Member ) ;
  						}
  	YY_BREAK
  case 31:
  YY_RULE_SETUP
! #line 245 "java.l"
  { current->protection = PROT ;
  						  BEGIN( Member ) ;
  						}
  	YY_BREAK
  case 32:
  YY_RULE_SETUP
! #line 249 "java.l"
  { if( current->type.length() )
  						    current->type += ' ' ;
  						  current->type += current->name ;
***************
*** 1337,1343 ****
  	YY_BREAK
  case 33:
  YY_RULE_SETUP
! #line 255 "java.l"
  { current->section = VARIABLE_SEC ;
  						  current_root->addSubEntry( current ) ;
  						  msg( "found field  ", current->name ) ;
--- 1336,1342 ----
  	YY_BREAK
  case 33:
  YY_RULE_SETUP
! #line 254 "java.l"
  { current->section = VARIABLE_SEC ;
  						  current_root->addSubEntry( current ) ;
  						  msg( "found field  ", current->name ) ;
***************
*** 1347,1353 ****
  	YY_BREAK
  case 34:
  YY_RULE_SETUP
! #line 262 "java.l"
  { current->section = FUNCTION_SEC ;
  						  current->args = yytext ;
  						  msg( "found method ", current->name ) ;
--- 1346,1352 ----
  	YY_BREAK
  case 34:
  YY_RULE_SETUP
! #line 261 "java.l"
  { current->section = FUNCTION_SEC ;
  						  current->args = yytext ;
  						  msg( "found method ", current->name ) ;
***************
*** 1356,1381 ****
  	YY_BREAK
  case 35:
  YY_RULE_SETUP
! #line 267 "java.l"
  { current->args += *yytext ;
  						  BEGIN( Function ) ;
  						}
  	YY_BREAK
  case 36:
  YY_RULE_SETUP
! #line 270 "java.l"
  { current->args += *yytext ; }
  	YY_BREAK
  case 37:
  YY_RULE_SETUP
! #line 271 "java.l"
  { BEGIN( Throws ) ;
  						  current->args += " throws " ;
  						}
  	YY_BREAK
  case 38:
  YY_RULE_SETUP
! #line 274 "java.l"
  {
  						  current_root->addSubEntry( current ) ;
  						  current = new Entry ;
--- 1355,1380 ----
  	YY_BREAK
  case 35:
  YY_RULE_SETUP
! #line 266 "java.l"
  { current->args += *yytext ;
  						  BEGIN( Function ) ;
  						}
  	YY_BREAK
  case 36:
  YY_RULE_SETUP
! #line 269 "java.l"
  { current->args += *yytext ; }
  	YY_BREAK
  case 37:
  YY_RULE_SETUP
! #line 270 "java.l"
  { BEGIN( Throws ) ;
  						  current->args += " throws " ;
  						}
  	YY_BREAK
  case 38:
  YY_RULE_SETUP
! #line 273 "java.l"
  {
  						  current_root->addSubEntry( current ) ;
  						  current = new Entry ;
***************
*** 1384,1431 ****
  	YY_BREAK
  case 39:
  YY_RULE_SETUP
! #line 280 "java.l"
  { current->args += yytext ; }
  	YY_BREAK
  case 40:
  YY_RULE_SETUP
! #line 281 "java.l"
  { current->args += yytext ;
  						  BEGIN( Function ) ;
  						}
  	YY_BREAK
  case 41:
  YY_RULE_SETUP
! #line 288 "java.l"
  { current->program += yytext ;
  						  yyLineNr++ ;
  						}
  	YY_BREAK
  case 42:
  YY_RULE_SETUP
! #line 291 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 43:
  YY_RULE_SETUP
! #line 292 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 44:
  YY_RULE_SETUP
! #line 293 "java.l"
  { current->program += yytext ;
  						  BEGIN( lastContext ) ;
  						}
  	YY_BREAK
  case 45:
  YY_RULE_SETUP
! #line 297 "java.l"
  
  	YY_BREAK
  case 46:
  YY_RULE_SETUP
! #line 299 "java.l"
  { lastContext = YY_START ;
  						  lineCount() ;
  						  current->doc.clear() ;
--- 1383,1430 ----
  	YY_BREAK
  case 39:
  YY_RULE_SETUP
! #line 279 "java.l"
  { current->args += yytext ; }
  	YY_BREAK
  case 40:
  YY_RULE_SETUP
! #line 280 "java.l"
  { current->args += yytext ;
  						  BEGIN( Function ) ;
  						}
  	YY_BREAK
  case 41:
  YY_RULE_SETUP
! #line 287 "java.l"
  { current->program += yytext ;
  						  yyLineNr++ ;
  						}
  	YY_BREAK
  case 42:
  YY_RULE_SETUP
! #line 290 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 43:
  YY_RULE_SETUP
! #line 291 "java.l"
  { current->program += yytext ; }
  	YY_BREAK
  case 44:
  YY_RULE_SETUP
! #line 292 "java.l"
  { current->program += yytext ;
  						  BEGIN( lastContext ) ;
  						}
  	YY_BREAK
  case 45:
  YY_RULE_SETUP
! #line 296 "java.l"
  
  	YY_BREAK
  case 46:
  YY_RULE_SETUP
! #line 298 "java.l"
  { lastContext = YY_START ;
  						  lineCount() ;
  						  current->doc.clear() ;
***************
*** 1434,1440 ****
  	YY_BREAK
  case 47:
  YY_RULE_SETUP
! #line 304 "java.l"
  { if( lastContext == FindMembers
  						  &&  current_root->section == INTERFACE_SEC )
  						      BEGIN( Member ) ;
--- 1433,1439 ----
  	YY_BREAK
  case 47:
  YY_RULE_SETUP
! #line 303 "java.l"
  { if( lastContext == FindMembers
  						  &&  current_root->section == INTERFACE_SEC )
  						      BEGIN( Member ) ;
***************
*** 1444,1472 ****
  	YY_BREAK
  case 48:
  YY_RULE_SETUP
! #line 310 "java.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 49:
  YY_RULE_SETUP
! #line 311 "java.l"
  { current->doc += '\n' ;
  						  yyLineNr++ ;
  						}
  	YY_BREAK
  case 50:
  YY_RULE_SETUP
! #line 314 "java.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 51:
  YY_RULE_SETUP
! #line 315 "java.l"
  { current->doc += *yytext ; }
  	YY_BREAK
  case 52:
  YY_RULE_SETUP
! #line 317 "java.l"
  { if( YY_START != SkipComment )
  						    lastContext = YY_START ;
  						  BEGIN( SkipComment ) ;
--- 1443,1471 ----
  	YY_BREAK
  case 48:
  YY_RULE_SETUP
! #line 309 "java.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 49:
  YY_RULE_SETUP
! #line 310 "java.l"
  { current->doc += '\n' ;
  						  yyLineNr++ ;
  						}
  	YY_BREAK
  case 50:
  YY_RULE_SETUP
! #line 313 "java.l"
  { current->doc += yytext ; }
  	YY_BREAK
  case 51:
  YY_RULE_SETUP
! #line 314 "java.l"
  { current->doc += *yytext ; }
  	YY_BREAK
  case 52:
  YY_RULE_SETUP
! #line 316 "java.l"
  { if( YY_START != SkipComment )
  						    lastContext = YY_START ;
  						  BEGIN( SkipComment ) ;
***************
*** 1474,1500 ****
  	YY_BREAK
  case 53:
  YY_RULE_SETUP
! #line 321 "java.l"
  { BEGIN( lastContext ) ; }
  	YY_BREAK
  case 54:
  YY_RULE_SETUP
! #line 322 "java.l"
  
  	YY_BREAK
  case 55:
  YY_RULE_SETUP
! #line 323 "java.l"
  
  	YY_BREAK
  case 56:
  YY_RULE_SETUP
! #line 324 "java.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 57:
  YY_RULE_SETUP
! #line 325 "java.l"
  ECHO;
  	YY_BREAK
  case YY_STATE_EOF(INITIAL):
--- 1473,1499 ----
  	YY_BREAK
  case 53:
  YY_RULE_SETUP
! #line 320 "java.l"
  { BEGIN( lastContext ) ; }
  	YY_BREAK
  case 54:
  YY_RULE_SETUP
! #line 321 "java.l"
  
  	YY_BREAK
  case 55:
  YY_RULE_SETUP
! #line 322 "java.l"
  
  	YY_BREAK
  case 56:
  YY_RULE_SETUP
! #line 323 "java.l"
  { yyLineNr++ ; }
  	YY_BREAK
  case 57:
  YY_RULE_SETUP
! #line 324 "java.l"
  ECHO;
  	YY_BREAK
  case YY_STATE_EOF(INITIAL):
***************
*** 1701,1707 ****
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_n_chars = 0;
  
  	else
  		{
--- 1700,1706 ----
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
  
  	else
  		{
***************
*** 1756,1761 ****
--- 1755,1762 ----
  		/* Read in more data. */
  		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
  			yy_n_chars, num_to_read );
+ 
+ 		yy_current_buffer->yy_n_chars = yy_n_chars;
  		}
  
  	if ( yy_n_chars == 0 )
***************
*** 1881,1887 ****
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
--- 1882,1889 ----
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_current_buffer->yy_n_chars =
! 			yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
***************
*** 1924,1936 ****
  
  			switch ( yy_get_next_buffer() )
  				{
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
- 						{
- 						yy_c_buf_p = yytext_ptr + offset;
  						return EOF;
- 						}
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
--- 1926,1951 ----
  
  			switch ( yy_get_next_buffer() )
  				{
+ 				case EOB_ACT_LAST_MATCH:
+ 					/* This happens because yy_g_n_b()
+ 					 * sees that we've accumulated a
+ 					 * token and flags that we need to
+ 					 * try matching the token before
+ 					 * proceeding.  But for input(),
+ 					 * there's no matching to consider.
+ 					 * So convert the EOB_ACT_LAST_MATCH
+ 					 * to EOB_ACT_END_OF_FILE.
+ 					 */
+ 
+ 					/* Reset buffer status. */
+ 					yyrestart( yyin );
+ 
+ 					/* fall through */
+ 
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
  						return EOF;
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
***************
*** 1944,1958 ****
  				case EOB_ACT_CONTINUE_SCAN:
  					yy_c_buf_p = yytext_ptr + offset;
  					break;
- 
- 				case EOB_ACT_LAST_MATCH:
- #ifdef __cplusplus
- 					YY_FATAL_ERROR(
- 					"unexpected last match in yyinput()" );
- #else
- 					YY_FATAL_ERROR(
- 					"unexpected last match in input()" );
- #endif
  				}
  			}
  		}
--- 1959,1964 ----
***************
*** 2117,2122 ****
--- 2123,2131 ----
  #endif
  
  	{
+ 	if ( ! b )
+ 		return;
+ 
  	b->yy_n_chars = 0;
  
  	/* We always need two end-of-buffer characters.  The first causes
***************
*** 2176,2192 ****
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *str )
  #else
! YY_BUFFER_STATE yy_scan_string( str )
! yyconst char *str;
  #endif
  	{
  	int len;
! 	for ( len = 0; str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( str, len );
  	}
  #endif
  
--- 2185,2201 ----
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
  #else
! YY_BUFFER_STATE yy_scan_string( yy_str )
! yyconst char *yy_str;
  #endif
  	{
  	int len;
! 	for ( len = 0; yy_str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( yy_str, len );
  	}
  #endif
  
***************
*** 2395,2401 ****
  	return 0;
  	}
  #endif
! #line 325 "java.l"
  
  
  
--- 2404,2410 ----
  	return 0;
  	}
  #endif
! #line 324 "java.l"
  
  
  
diff -c src/java.h src-g++-2.8.1/java.h
*** src/java.h	Fri Jul 31 03:00:43 1998
--- src-g++-2.8.1/java.h	Tue Sep 15 11:24:09 1998
***************
*** 0 ****
--- 1,524 ----
+ static unsigned char ClassGraph_class []={
+  202, 254, 186, 190,   0,   3,   0,  45,   0,  80,   8,   0,  56,   8,   0,  54,   8,   0
+ ,  55,   8,   0,  40,   8,   0,  51,   7,   0,  61,   7,   0,  74,   7,   0,  79,   7,   0
+ ,  68,   7,   0,  60,   7,   0,  58,   7,   0,  42,   7,   0,  46,  10,   0,  11,   0,  27
+ ,  10,   0,  10,   0,  30,  10,   0,  10,   0,  29,  10,   0,   6,   0,  37,  10,   0,  13
+ ,   0,  35,  10,   0,   8,   0,  26,  10,   0,  10,   0,  32,  10,   0,   6,   0,  33,   9
+ ,   0,   7,   0,  31,   9,   0,   8,   0,  34,  10,   0,   6,   0,  36,  10,   0,   6,   0
+ ,  28,  12,   0,  77,   0,  72,  12,   0,  65,   0,  73,  12,   0,  53,   0,  39,  12,   0
+ ,  44,   0,  43,  12,   0,  57,   0,  48,  12,   0,  62,   0,  49,  12,   0,  69,   0,  71
+ ,  12,   0,  75,   0,  66,  12,   0,  76,   0,  41,  12,   0,  77,   0,  78,  12,   0,  77
+ ,   0,  52,  12,   0,  70,   0,  50,   1,   0,  13,  67, 111, 110, 115, 116,  97, 110, 116
+ ,  86,  97, 108, 117, 101,   1,   0,  29,  40,  41,  76, 106,  97, 118,  97,  47,  97, 112
+ , 112, 108, 101, 116,  47,  65, 112, 112, 108, 101, 116,  67, 111, 110, 116, 101, 120, 116
+ ,  59,   1,   0,   6,  98, 101, 102, 111, 114, 101,   1,   0,  18,  76, 106,  97, 118,  97
+ ,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,   1,   0,  15,  78,  97
+ , 118, 105, 103,  97, 116, 111, 114,  66, 117, 116, 116, 111, 110,   1,   0,  42,  40,  76
+ , 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111, 109, 112, 111, 110, 101, 110, 116
+ ,  59,  41,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111, 109, 112, 111, 110
+ , 101, 110, 116,  59,   1,   0,   3,  97, 100, 100,   1,   0,  10,  69, 120,  99, 101, 112
+ , 116, 105, 111, 110, 115,   1,   0,  19, 106,  97, 118,  97,  47,  97, 119, 116,  47,  70
+ , 108, 111, 119,  76,  97, 121, 111, 117, 116,   1,   0,  10,  83, 111, 117, 114,  99, 101
+ ,  70, 105, 108, 101,   1,   0,  22,  40,  41,  76, 106,  97, 118,  97,  47,  97, 119, 116
+ ,  47,  68, 105, 109, 101, 110, 115, 105, 111, 110,  59,   1,   0,  17,  76,  67, 108,  97
+ , 115, 115,  71, 114,  97, 112, 104,  80,  97, 110, 101, 108,  59,   1,   0,  38,  40,  76
+ , 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  41
+ ,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59
+ ,   1,   0,   7,  99, 108,  97, 115, 115, 101, 115,   1,   0,   3,  40,  41,  86,   1,   0
+ ,  16, 103, 101, 116,  65, 112, 112, 108, 101, 116,  67, 111, 110, 116, 101, 120, 116,   1
+ ,   0,   6, 105, 110, 100, 101, 110, 116,   1,   0,   8,  97, 114, 114, 111, 119, 100, 105
+ , 114,   1,   0,   5,  97, 102, 116, 101, 114,   1,   0,  13, 112, 114, 101, 102, 101, 114
+ , 114, 101, 100,  83, 105, 122, 101,   1,   0,  18, 106,  97, 118,  97,  47,  97, 119, 116
+ ,  47,  67, 111, 109, 112, 111, 110, 101, 110, 116,   1,   0,   4, 105, 110, 105, 116,   1
+ ,   0,  18, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111, 110, 116,  97, 105, 110
+ , 101, 114,   1,   0,  18, 106,  97, 118,  97,  47,  97, 112, 112, 108, 101, 116,  47,  65
+ , 112, 112, 108, 101, 116,   1,   0,   5, 112,  97, 110, 101, 108,   1,   0,   4,  67, 111
+ , 100, 101,   1,   0,  14,  76, 111,  99,  97, 108,  86,  97, 114, 105,  97,  98, 108, 101
+ , 115,   1,   0,   6, 114, 101, 115, 105, 122, 101,   1,   0,  16,  40,  41,  76, 106,  97
+ , 118,  97,  47, 110, 101, 116,  47,  85,  82,  76,  59,   1,   0,  15,  67, 108,  97, 115
+ , 115,  71, 114,  97, 112, 104,  46, 106,  97, 118,  97,   1,   0,  11,  67, 108,  97, 115
+ , 115,  76,  97, 121, 111, 117, 116,   1,   0,   9, 115, 101, 116,  76,  97, 121, 111, 117
+ , 116,   1,   0,  12, 103, 101, 116,  80,  97, 114,  97, 109, 101, 116, 101, 114,   1,   0
+ ,  27,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  76,  97, 121, 111, 117, 116
+ ,  77,  97, 110,  97, 103, 101, 114,  59,  41,  86,   1,   0, 116,  40,  76, 106,  97, 118
+ ,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118
+ ,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118
+ ,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118
+ ,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118
+ ,  97,  47,  97, 112, 112, 108, 101, 116,  47,  65, 112, 112, 108, 101, 116,  67, 111, 110
+ , 116, 101, 120, 116,  59,  76, 106,  97, 118,  97,  47, 110, 101, 116,  47,  85,  82,  76
+ ,  59,  41,  86,   1,   0,  23,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  68
+ , 105, 109, 101, 110, 115, 105, 111, 110,  59,  41,  86,   1,   0,  10,  67, 108,  97, 115
+ , 115,  71, 114,  97, 112, 104,   1,   0,  15, 103, 101, 116,  68, 111,  99, 117, 109, 101
+ , 110, 116,  66,  97, 115, 101,   1,   0,   3, 100, 105, 114,   1,   0,   6,  60, 105, 110
+ , 105, 116,  62,   1,   0,   4,  40,  73,  41,  86,   1,   0,  15,  67, 108,  97, 115, 115
+ ,  71, 114,  97, 112, 104,  80,  97, 110, 101, 108,   0,   1,   0,   7,   0,   6,   0,   0
+ ,   0,   1,   0,   0,   0,  62,   0,  49,   0,   0,   0,   2,   0,   1,   0,  59,   0,  52
+ ,   0,   1,   0,  63,   0,   0,   0, 107,   0,   9,   0,   5,   0,   0,   0,  95,  42,  18
+ ,   5, 182,   0,  17,  76,  42,  18,   4, 182,   0,  17,  77,  42,  18,   1, 182,   0,  17
+ ,  78,  42,  18,   2, 182,   0,  17,  58,   4,  42,  18,   3, 182,   0,  17, 179,   0,  23
+ ,  42, 187,   0,  13,  89,   3, 183,   0,  18, 182,   0,  20,  42, 187,   0,   8,  89,  43
+ ,  25,   4,  44,  45,  42, 182,   0,  25,  42, 182,   0,  21, 183,   0,  19, 181,   0,  22
+ ,  42,  42, 180,   0,  22, 182,   0,  16,  87,  42,  42, 180,   0,  22, 182,   0,  15, 182
+ ,   0,  14, 177,   0,   0,   0,   0,   0,   1,   0,  77,   0,  52,   0,   1,   0,  63,   0
+ ,   0,   0,  17,   0,   1,   0,   1,   0,   0,   0,   5,  42, 183,   0,  24, 177,   0,   0
+ ,   0,   0,   0,   1,   0,  47,   0,   0,   0,   2,   0,  67};static unsigned char ClassGraphPanel_class []={
+  202, 254, 186, 190,   0,   3,   0,  45,   0, 222,   8,   0, 216,   8,   0, 124,   8,   0
+ , 187,   8,   0, 178,   8,   0, 194,   8,   0, 191,   8,   0, 199,   8,   0, 195,   8,   0
+ , 209,   8,   0, 208,   8,   0, 204,   8,   0, 126,   7,   0, 214,   7,   0, 202,   7,   0
+ , 189,   7,   0, 218,   7,   0, 174,   7,   0, 117,   7,   0, 212,   7,   0, 129,   7,   0
+ , 123,   7,   0, 188,   7,   0, 221,   7,   0, 145,   7,   0, 168,   7,   0, 122,   7,   0
+ , 154,   7,   0, 185,   7,   0, 118,   7,   0, 159,  10,   0,  19,   0,  82,  10,   0,  24
+ ,   0, 107,  10,   0,  24,   0, 111,   9,   0,  19,   0,  80,  10,   0,  24,   0,  99,   9
+ ,   0,  25,   0,  94,   9,   0,  19,   0,  93,  10,   0,  19,   0,  89,  10,   0,  26,   0
+ ,  84,  10,   0,  13,   0,  85,  10,   0,  26,   0, 105,  10,   0,  16,   0,  81,  10,   0
+ ,  14,   0,  81,  10,   0,  30,   0, 103,  10,   0,  15,   0,  95,   9,   0,  19,   0, 109
+ ,  10,   0,  24,   0, 104,   9,   0,  19,   0,  74,  10,   0,  19,   0,  86,   9,   0,  19
+ ,   0, 110,  10,   0,  15,   0,  92,   9,   0,  14,   0, 106,  10,   0,  15,   0,  83,   9
+ ,   0,  19,   0,  76,   9,   0,  19,   0,  90,  10,   0,  27,   0, 113,  10,   0,  19,   0
+ ,  77,  10,   0,  15,   0, 114,   9,   0,  19,   0,  79,   9,   0,  19,   0,  91,  10,   0
+ ,  22,   0, 102,  10,   0,  27,   0,  87,   9,   0,  18,   0,  97,  10,   0,  22,   0,  96
+ ,   9,   0,  29,   0, 100,  10,   0,  30,   0, 115,   9,   0,  19,   0,  98,  10,   0,  28
+ ,   0,  88,  10,   0,  19,   0,  75,   9,   0,  29,   0,  78,   9,   0,  19,   0, 108,  10
+ ,   0,  30,   0, 112,  10,   0,  23,   0, 101,  12,   0, 179,   0, 165,  12,   0, 146,   0
+ , 134,  12,   0, 193,   0, 206,  12,   0, 184,   0, 134,  12,   0, 182,   0, 206,  12,   0
+ , 203,   0, 190,  12,   0, 172,   0, 217,  12,   0, 121,   0, 162,  12,   0, 136,   0, 134
+ ,  12,   0, 128,   0, 161,  12,   0, 150,   0, 131,  12,   0, 121,   0, 170,  12,   0, 175
+ ,   0, 134,  12,   0, 156,   0, 158,  12,   0, 142,   0, 173,  12,   0, 152,   0, 143,  12
+ ,   0, 144,   0, 217,  12,   0, 171,   0, 198,  12,   0, 160,   0, 148,  12,   0, 211,   0
+ , 176,  12,   0, 215,   0, 206,  12,   0, 147,   0, 164,  12,   0, 177,   0, 151,  12,   0
+ , 137,   0, 220,  12,   0, 180,   0, 153,  12,   0, 132,   0, 130,  12,   0, 192,   0, 206
+ ,  12,   0, 121,   0, 166,  12,   0, 139,   0, 120,  12,   0, 181,   0, 141,  12,   0, 132
+ ,   0, 119,  12,   0, 167,   0, 163,  12,   0, 210,   0, 206,  12,   0, 157,   0, 164,  12
+ ,   0, 186,   0, 206,  12,   0, 127,   0, 217,  12,   0, 183,   0, 206,  12,   0, 140,   0
+ , 149,  12,   0, 133,   0, 169,  12,   0, 207,   0, 164,  12,   0, 121,   0, 196,  12,   0
+ , 138,   0, 200,   1,   0,  22,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  71
+ , 114,  97, 112, 104, 105,  99, 115,  59,  41,  86,   1,   0,  14, 106,  97, 118,  97,  47
+ ,  97, 119, 116,  47,  67, 111, 108, 111, 114,   1,   0,  18, 106,  97, 118,  97,  47,  97
+ , 119, 116,  47,  82, 101,  99, 116,  97, 110, 103, 108, 101,   1,   0,  21,  40,  73,  41
+ ,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59
+ ,   1,   0,   7,  40,  73,  73,  73,  73,  41,  86,   1,   0,   6,  60, 105, 110, 105, 116
+ ,  62,   1,   0,  18, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111, 110, 116,  97
+ , 105, 110, 101, 114,   1,   0,  15, 106,  97, 118,  97,  47,  97, 119, 116,  47,  66, 117
+ , 116, 116, 111, 110,   1,   0,   2, 117, 112,   1,   0,  10,  83, 111, 117, 114,  99, 101
+ ,  70, 105, 108, 101,   1,   0,   4, 100, 111, 119, 110,   1,   0,   6,  98, 101, 102, 111
+ , 114, 101,   1,   0,  13, 104,  97, 115,  77, 111, 114, 101,  84, 111, 107, 101, 110, 115
+ ,   1,   0,  10,  67, 108,  97, 115, 115,  71, 114,  97, 112, 104,   1,   0,  22,  40,  73
+ ,  73,  41,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110
+ , 103,  59,   1,   0,  42,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111
+ , 109, 112, 111, 110, 101, 110, 116,  59,  41,  76, 106,  97, 118,  97,  47,  97, 119, 116
+ ,  47,  67, 111, 109, 112, 111, 110, 101, 110, 116,  59,   1,   0,   9, 115, 117,  98, 115
+ , 116, 114, 105, 110, 103,   1,   0,   4, 109, 111, 118, 101,   1,   0,  24,  40,  76, 106
+ ,  97, 118,  97,  47,  97, 119, 116,  47,  71, 114,  97, 112, 104, 105,  99, 115,  59,  73
+ ,  73,  41,  86,   1,   0,  10,  69, 120,  99, 101, 112, 116, 105, 111, 110, 115,   1,   0
+ ,   9, 108, 101, 102, 116,  65, 114, 114, 111, 119,   1,   0,   5,  98, 108,  97,  99, 107
+ ,   1,   0,   4, 115, 105, 122, 101,   1,   0,   8, 100, 114,  97, 119,  76, 105, 110, 101
+ ,   1,   0,   6, 101, 113, 117,  97, 108, 115,   1,   0,  22,  40,  41,  76, 106,  97, 118
+ ,  97,  47,  97, 119, 116,  47,  82, 101,  99, 116,  97, 110, 103, 108, 101,  59,   1,   0
+ ,   3, 109,  97, 120,   1,   0,  42,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47
+ ,  71, 114,  97, 112, 104, 105,  99, 115,  59,  73,  73,  76, 106,  97, 118,  97,  47, 108
+ ,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  41,  86,   1,   0,   4, 117, 114
+ , 108, 115,   1,   0,  16, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114
+ , 105, 110, 103,   1,   0,  10, 114, 105, 103, 104, 116,  65, 114, 114, 111, 119,   1,   0
+ ,  11,  99, 111, 117, 110, 116,  84, 111, 107, 101, 110, 115,   1,   0,  20,  40,  41,  76
+ , 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,   1
+ ,   0,  21,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  79,  98, 106, 101
+ ,  99, 116,  59,  41,  90,   1,   0,   3,  97, 100, 100,   1,   0,  19,  40,  76, 106,  97
+ , 118,  97,  47,  97, 119, 116,  47,  67, 111, 108, 111, 114,  59,  41,  86,   1,   0,   9
+ , 112,  97, 105, 110, 116,  76, 105, 110, 101,   1,   0,  13,  76,  67, 108,  97, 115, 115
+ ,  76,  97, 121, 111, 117, 116,  59,   1,   0,  17, 106,  97, 118,  97,  47, 108,  97, 110
+ , 103,  47,  73, 110, 116, 101, 103, 101, 114,   1,   0, 116,  40,  76, 106,  97, 118,  97
+ ,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118,  97
+ ,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118,  97
+ ,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118,  97
+ ,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118,  97
+ ,  47,  97, 112, 112, 108, 101, 116,  47,  65, 112, 112, 108, 101, 116,  67, 111, 110, 116
+ , 101, 120, 116,  59,  76, 106,  97, 118,  97,  47, 110, 101, 116,  47,  85,  82,  76,  59
+ ,  41,  86,   1,   0,   7, 118,  97, 108, 117, 101,  79, 102,   1,   0,   6, 108, 101, 110
+ , 103, 116, 104,   1,   0,  39,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47
+ ,  83, 116, 114, 105, 110, 103,  59,  41,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103
+ ,  47,  73, 110, 116, 101, 103, 101, 114,  59,   1,   0,  18, 106,  97, 118,  97,  47,  97
+ , 119, 116,  47,  67, 111, 109, 112, 111, 110, 101, 110, 116,   1,   0,   9, 110, 101, 120
+ , 116,  84, 111, 107, 101, 110,   1,   0,   3,  40,  41,  90,   1,   0,   3,  40,  41,  86
+ ,   1,   0,  27,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  76,  97, 121, 111
+ , 117, 116,  77,  97, 110,  97, 103, 101, 114,  59,  41,  86,   1,   0,   3,  40,  41,  73
+ ,   1,   0,   2,  91,  73,   1,   0,  66,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110
+ , 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97, 118,  97,  47, 110, 101, 116
+ ,  47,  85,  82,  76,  59,  76, 106,  97, 118,  97,  47,  97, 112, 112, 108, 101, 116,  47
+ ,  65, 112, 112, 108, 101, 116,  67, 111, 110, 116, 101, 120, 116,  59,  90,  90,  73,  73
+ ,  41,  86,   1,   0,   9, 115, 101, 116,  76,  97, 121, 111, 117, 116,   1,   0,  18, 106
+ ,  97, 118,  97,  47,  97, 119, 116,  47,  68, 105, 109, 101, 110, 115, 105, 111, 110,   1
+ ,   0,   5,  40,  73,  73,  41,  86,   1,   0,  35,  40,  76, 106,  97, 118,  97,  47, 110
+ , 101, 116,  47,  85,  82,  76,  59,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47
+ ,  83, 116, 114, 105, 110, 103,  59,  41,  86,   1,   0,   5, 102, 105, 114, 115, 116,   1
+ ,   0,   5,  97, 102, 116, 101, 114,   1,   0,   5,  40,  73,  73,  41,  73,   1,   0,  19
+ , 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  69, 120,  99, 101, 112, 116, 105, 111
+ , 110,   1,   0,   9, 100, 111, 119, 110,  65, 114, 114, 111, 119,   1,   0,  18,  91,  76
+ , 106,  97, 118,  97,  47,  97, 119, 116,  47,  66, 117, 116, 116, 111, 110,  59,   1,   0
+ ,   8, 115, 101, 116,  67, 111, 108, 111, 114,   1,   0,   1, 124,   1,   0,   6, 105, 110
+ , 100, 101, 110, 116,   1,   0,   6, 108,  97, 121, 111, 117, 116,   1,   0,   6,  98, 111
+ , 117, 110, 100, 115,   1,   0,   1, 120,   1,   0,   1, 119,   1,   0,   7, 117, 112,  65
+ , 114, 114, 111, 119,   1,   0,  14, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  77
+ ,  97, 116, 104,   1,   0,   4,  99,  99, 110, 116,   1,   0,   1, 114,   1,   0,  17, 106
+ ,  97, 118,  97,  47,  97, 119, 116,  47,  71, 114,  97, 112, 104, 105,  99, 115,   1,   0
+ ,  25, 106,  97, 118,  97,  47, 117, 116, 105, 108,  47,  83, 116, 114, 105, 110, 103,  84
+ , 111, 107, 101, 110, 105, 122, 101, 114,   1,   0,  18,  76, 106,  97, 118,  97,  47, 108
+ ,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,   1,   0,   1, 108,   1,   0,   5
+ , 119, 105, 100, 116, 104,   1,   0,   1, 104,   1,   0,   1, 100,   1,   0,   1,  94,   1
+ ,   0,  39,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105
+ , 110, 103,  59,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105
+ , 110, 103,  59,  41,  86,   1,   0,  15,  67, 108,  97, 115, 115,  71, 114,  97, 112, 104
+ ,  46, 106,  97, 118,  97,   1,   0,   1,  90,   1,   0,   1,  82,   1,   0,  22,  40,  41
+ ,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  68, 105, 109, 101, 110, 115, 105, 111
+ , 110,  59,   1,   0,   5, 112,  97, 105, 110, 116,   1,   0,  11,  67, 108,  97, 115, 115
+ ,  76,  97, 121, 111, 117, 116,   1,   0,   3, 100, 105, 114,   1,   0,   1,  76,   1,   0
+ ,  13,  67, 111, 110, 115, 116,  97, 110, 116,  86,  97, 108, 117, 101,   1,   0,   1,  73
+ ,   1,   0,   8, 105, 110, 116,  86,  97, 108, 117, 101,   1,   0,   1,  68,   1,   0,   1
+ ,  67,   1,   0,   7, 108, 101, 102, 116, 109,  97, 120,   1,   0,   7,  98, 117, 116, 116
+ , 111, 110, 115,   1,   0,  15,  67, 108,  97, 115, 115,  71, 114,  97, 112, 104,  80,  97
+ , 110, 101, 108,   1,   0,   4,  67, 111, 100, 101,   1,   0,  12, 106,  97, 118,  97,  47
+ , 110, 101, 116,  47,  85,  82,  76,   1,   0,   6, 104, 101, 105, 103, 104, 116,   1,   0
+ ,   1,  44,   1,   0,  19,  91,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83
+ , 116, 114, 105, 110, 103,  59,   1,   0,  14, 106,  97, 118,  97,  47,  97, 119, 116,  47
+ ,  80,  97, 110, 101, 108,   1,   0,  14,  76, 111,  99,  97, 108,  86,  97, 114, 105,  97
+ ,  98, 108, 101, 115,   1,   0,  16,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67
+ , 111, 108, 111, 114,  59,   1,   0,  15,  78,  97, 118, 105, 103,  97, 116, 111, 114,  66
+ , 117, 116, 116, 111, 110,   0,   0,   0,  19,   0,  16,   0,   0,   0,  11,   0,   0,   0
+ , 186,   0, 206,   0,   0,   0,   1,   0, 211,   0, 176,   0,   0,   0,   1,   0, 144,   0
+ , 217,   0,   0,   0,   1,   0, 127,   0, 217,   0,   0,   0,   1,   0, 172,   0, 217,   0
+ ,   0,   0,   9,   0, 203,   0, 190,   0,   0,   0,   0,   0, 179,   0, 165,   0,   0,   0
+ ,   0,   0, 180,   0, 153,   0,   0,   0,   0,   0, 193,   0, 206,   0,   0,   0,   0,   0
+ , 183,   0, 206,   0,   0,   0,   0,   0, 171,   0, 198,   0,   0,   0,   7,   0,   0,   0
+ , 121,   0, 155,   0,   1,   0, 213,   0,   0,   1, 222,   0,  12,   0,  19,   0,   0,   1
+ , 202,  42, 183,   0,  42,  42,  16,  30, 181,   0,  54,  42,  16,  30, 181,   0,  50,  42
+ ,   4, 181,   0,  60, 187,   0,  15,  89,  43,  18,   1, 183,   0,  58,  58,   7, 187,   0
+ ,  15,  89,  45,  18,   1, 183,   0,  58,  58,   8, 187,   0,  15,  89,  44,  18,   1, 183
+ ,   0,  58,  58,   9, 187,   0,  15,  89,  25,   4,  18,   1, 183,   0,  58,  58,  10,  42
+ ,  25,   8, 182,   0,  45, 189,   0,  21, 181,   0,  37,  42,  25,   8, 182,   0,  45, 189
+ ,   0,  24, 181,   0,  55,  42,  25,   8, 182,   0,  45, 189,   0,  24, 181,   0,  46,  42
+ ,  25,   8, 182,   0,  45, 189,   0,  24, 181,   0,  34,  42,  25,   8, 182,   0,  45, 188
+ ,  10, 181,   0,  48, 167,   0, 236,  25,   7, 182,   0,  51,  58,  11,  25,  11,   3,   4
+ , 182,   0,  35,  58,  12,  25,  11,   4, 182,   0,  47,  58,  13,  25,   7, 182,   0,  51
+ ,   4, 182,   0,  47,  58,  14,  42, 180,   0,  46,  42, 180,   0,  71,  25,   8, 182,   0
+ ,  51,   4, 182,   0,  47,  83,  42, 180,   0,  34,  42, 180,   0,  71,  25,  10, 182,   0
+ ,  51,   4, 182,   0,  47,  83,  42, 180,   0,  48,  42, 180,   0,  71,  25,   9, 182,   0
+ ,  51, 184,   0,  62, 182,   0,  56,  79,   1,  58,  15,  25,  14, 182,   0,  32, 158,   0
+ ,  20, 187,   0,  13,  89,  25,   6,  25,  14, 183,   0,  40,  58,  15, 167,   0,   4,  87
+ ,   3,  54,  16,  42, 180,   0,  46,  42, 180,   0,  71,  50, 182,   0,  32,   5, 162,   0
+ ,   6,   4,  54,  16,  42, 180,   0,  34,  42, 180,   0,  71,  50, 182,   0,  32,  42, 180
+ ,   0,  46,  42, 180,   0,  71,  50, 182,   0,  32,  96,   5, 108,  54,  17,   4,  54,  18
+ ,  25,  12,  18,   9, 182,   0,  33, 153,   0,   6,   3,  54,  18,  42, 180,   0,  37,  42
+ , 180,   0,  71, 187,   0,  23,  89,  25,  13,  25,  15,  25,   5,  21,  16,  21,  18,  21
+ ,  17,  42, 180,   0,  48,  42, 180,   0,  71,  46, 183,   0,  73,  83,  42,  89, 180,   0
+ ,  71,   4,  96, 181,   0,  71,  25,   7, 182,   0,  53, 154, 255,  18,  42,  42, 187,   0
+ ,  14,  89, 183,   0,  43,  90, 181,   0,  67, 182,   0,  41,   3,  54,  11, 167,   0,  56
+ ,  42,  42, 180,   0,  37,  21,  11,  50, 182,   0,  39,  87,  42, 180,   0,  37,  21,  11
+ ,  50,  16,  30,  42, 180,   0,  48,  21,  11,  46,  42, 180,   0,  46,  21,  11,  50, 182
+ ,   0,  32,   5, 108,  96, 104,  21,  11,  16,  30, 104, 182,   0,  72, 132,  11,   1,  21
+ ,  11,  42, 180,   0,  71, 161, 255, 197, 177,   0,   1,   0, 234,   0, 247,   0, 250,   0
+ ,  17,   0,   0,   0,   0,   0, 146,   0, 134,   0,   1,   0, 213,   0,   0,   0,  49,   0
+ ,   5,   0,   4,   0,   0,   0,  37, 178,   0,  59,  18,   2, 182,   0,  33, 153,   0,   4
+ , 177,  43,  28,   7, 100,  29,   6, 100,  28,  29, 182,   0,  61,  43,  28,   7, 100,  29
+ ,   6,  96,  28,  29, 182,   0,  61, 177,   0,   0,   0,   0,   0,   0,   0, 175,   0, 134
+ ,   0,   1,   0, 213,   0,   0,   0,  49,   0,   5,   0,   4,   0,   0,   0,  37, 178,   0
+ ,  59,  18,   2, 182,   0,  33, 153,   0,   4, 177,  43,  28,   6, 100,  29,   7, 100,  28
+ ,  29, 182,   0,  61,  43,  28,   6,  96,  29,   7, 100,  28,  29, 182,   0,  61, 177,   0
+ ,   0,   0,   0,   0,   0,   0, 136,   0, 134,   0,   1,   0, 213,   0,   0,   0,  49,   0
+ ,   5,   0,   4,   0,   0,   0,  37, 178,   0,  59,  18,  12, 182,   0,  33, 153,   0,   4
+ , 177,  43,  28,   7,  96,  29,   6, 100,  28,  29, 182,   0,  61,  43,  28,   7,  96,  29
+ ,   6,  96,  28,  29, 182,   0,  61, 177,   0,   0,   0,   0,   0,   0,   0, 184,   0, 134
+ ,   0,   1,   0, 213,   0,   0,   0,  49,   0,   5,   0,   4,   0,   0,   0,  37, 178,   0
+ ,  59,  18,  12, 182,   0,  33, 153,   0,   4, 177,  43,  28,   6, 100,  29,   7,  96,  28
+ ,  29, 182,   0,  61,  43,  28,   6,  96,  29,   7,  96,  28,  29, 182,   0,  61, 177,   0
+ ,   0,   0,   0,   0,   0,   0, 152,   0, 143,   0,   1,   0, 213,   0,   0,   3, 151,   0
+ ,   7,   0,   9,   0,   0,   3, 139,  42, 180,   0,  54,  42, 180,   0,  37,   3,  50, 182
+ ,   0,  66, 180,   0,  36, 100,   4,  96,   5, 108,  54,   5,   3,  54,   6, 167,   3, 100
+ ,  25,   4,  21,   6,  21,   6,   4,  96, 182,   0,  35,  58,   7,  25,   4,  21,   6,   4
+ ,  96,  21,   6,   5,  96, 182,   0,  35,  58,   8,  25,   7,  18,   4, 182,   0,  33, 153
+ ,   0, 120,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  21,   5, 100,  28,  42, 180
+ ,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0,  61,  25,   8,  18,   4
+ , 182,   0,  33, 154,   3,  12,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180
+ ,   0,  54,   5, 108,  96,  28,  42, 180,   0,  50,  96,  29,  42, 180,   0,  54,   5, 108
+ ,  96, 182,   0,  61,  42,  43,  28,  42, 180,   0,  50,  96,   4, 100,  29,  42, 180,   0
+ ,  54,   5, 108,  96, 182,   0,  69,  42,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29
+ ,  21,   5, 100,   4,  96, 182,   0,  57, 167,   2, 191,  25,   7,  18,   3, 182,   0,  33
+ , 153,   0,  90,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  28,  42, 180,   0,  50
+ ,   5, 108,  96,  29,  42, 180,   0,  54,   5, 108,  96, 182,   0,  61,  43,  28,  42, 180
+ ,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,   5, 108,  96,  28,  42, 180,   0,  50
+ ,  96,  29,  42, 180,   0,  54,   5, 108,  96, 182,   0,  61,  42,  43,  28,  42, 180,   0
+ ,  50,  96,   4, 100,  29,  42, 180,   0,  54,   5, 108,  96, 182,   0,  69, 167,   2,  94
+ ,  25,   7,  18,   6, 182,   0,  33, 153,   0,  85,  43,  28,  29,  42, 180,   0,  54,   5
+ , 108,  96,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,   5, 108,  96
+ , 182,   0,  61,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,   5
+ , 108,  96,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0
+ ,  61,  42,  43,  28,   4,  96,  29,  42, 180,   0,  50,   5, 108,  96, 182,   0,  31, 167
+ ,   2,   2,  25,   7,  18,  11, 182,   0,  33, 153,   0,  78,  43,  28,  29,  42, 180,   0
+ ,  54,   5, 108,  96,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,   5
+ , 108,  96, 182,   0,  61,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  28,  42, 180
+ ,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0,  61,  42,  43,  28,   4
+ ,  96,  29,  42, 180,   0,  50,   5, 108,  96, 182,   0,  31, 167,   1, 173,  25,   7,  18
+ ,   7, 182,   0,  33, 153,   0,  88,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42
+ , 180,   0,  54,   5, 108,  96,  28,  42, 180,   0,  50,  96,  29,  42, 180,   0,  54,   5
+ , 108,  96, 182,   0,  61,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  28,  42, 180
+ ,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0,  61,  42,  43,  28,  42
+ , 180,   0,  50,  96,   4, 100,  29,  42, 180,   0,  54,   5, 108,  96, 182,   0,  69, 167
+ ,   1,  78,  25,   7,  18,  10, 182,   0,  33, 153,   0,  97,  43,  28,  29,  42, 180,   0
+ ,  54,   5, 108,  96,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,   5
+ , 108,  96, 182,   0,  61,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  28,  42, 180
+ ,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0,  61,  42,  43,  28,  42
+ , 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0,  49,  42,  43,  28
+ ,   4,  96,  29,  42, 180,   0,  50,   5, 108,  96, 182,   0,  31, 167,   0, 230,  25,   7
+ ,  18,   5, 182,   0,  33, 153,   0, 104,  43,  28,  29,  42, 180,   0,  54,   5, 108,  96
+ ,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,   5, 108,  96, 182,   0
+ ,  61,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,   5, 108,  96
+ ,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0,  61,  42
+ ,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0,  54,  96, 182,   0,  49
+ ,  42,  43,  28,   4,  96,  29,  42, 180,   0,  50,   5, 108,  96, 182,   0,  31, 167,   0
+ , 119,  25,   7,  18,   8, 182,   0,  33, 153,   0, 109,  43,  28,  42, 180,   0,  50,   5
+ , 108,  96,  29,  21,   5, 100,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42, 180,   0
+ ,  54,   5, 108,  96, 182,   0,  61,  43,  28,  42, 180,   0,  50,   5, 108,  96,  29,  42
+ , 180,   0,  54,   5, 108,  96,  28,  42, 180,   0,  50,  96,  29,  42, 180,   0,  54,   5
+ , 108,  96, 182,   0,  61,  42,  43,  28,  42, 180,   0,  50,  96,   4, 100,  29,  42, 180
+ ,   0,  54,   5, 108,  96, 182,   0,  69,  42,  43,  28,  42, 180,   0,  50,   5, 108,  96
+ ,  29,  21,   5, 100,   4,  96, 182,   0,  57,  28,  42, 180,   0,  50,  96,  61, 132,   6
+ ,   2,  21,   6,  25,   4, 182,   0,  32,   4, 100, 161, 252, 150, 177,   0,   0,   0,   0
+ ,   0,   1,   0, 201,   0, 116,   0,   1,   0, 213,   0,   0,   0, 118,   0,   6,   0,   6
+ ,   0,   0,   0, 106,  43, 178,   0,  63, 182,   0,  64,   3,  54,   4, 167,   0,  81,  42
+ , 180,   0,  67, 180,   0,  52,   5, 100,   3, 184,   0,  68,  16,  30, 104,  61,  21,   4
+ ,  16,  30, 104,  62,  42,  43,  28,  29,  42, 180,   0,  46,  21,   4,  50, 182,   0,  38
+ ,  42, 180,   0,  37,  21,   4,  50, 182,   0,  44,  58,   5,  25,   5, 180,   0,  70,  25
+ ,   5, 180,   0,  65,  96,  61,  42,  43,  28,  29,  42, 180,   0,  34,  21,   4,  50, 182
+ ,   0,  38, 132,   4,   1,  21,   4,  42, 180,   0,  71, 161, 255, 172,  42,   3, 181,   0
+ ,  60, 177,   0,   0,   0,   0,   0,   1,   0, 125,   0,   0,   0,   2,   0, 197};static unsigned char ClassLayout_class []={
+  202, 254, 186, 190,   0,   3,   0,  45,   0, 157,   8,   0, 148,   7,   0,  96,   7,   0
+ , 110,   7,   0,  86,   7,   0,  82,   7,   0, 141,   7,   0, 146,   7,   0,  87,   7,   0
+ ,  92,   7,   0, 106,   7,   0, 132,   7,   0, 155,   7,   0, 115,   7,   0,  84,   7,   0
+ , 130,   7,   0, 105,  10,   0,  16,   0,  51,   9,   0,  12,   0,  58,  10,   0,  13,   0
+ ,  76,  10,   0,  10,   0,  55,   9,   0,  13,   0,  65,  10,   0,  14,   0,  52,   9,   0
+ ,  13,   0,  67,   9,   0,  12,   0,  72,  10,   0,  16,   0,  75,   9,   0,   2,   0,  73
+ ,  10,   0,  11,   0,  50,   9,   0,   2,   0,  68,   9,   0,   6,   0,  69,  10,   0,  14
+ ,   0,  60,   9,   0,   2,   0,  70,  10,   0,  14,   0,  56,   9,   0,   2,   0,  66,  10
+ ,   0,  10,   0,  54,   9,   0,   6,   0,  71,  10,   0,  10,   0,  80,   9,   0,   3,   0
+ ,  63,  10,   0,  10,   0,  57,   9,   0,   9,   0,  59,   9,   0,   3,   0,  53,  10,   0
+ ,   6,   0,  81,  10,   0,   5,   0,  55,   9,   0,   6,   0,  78,  10,   0,   6,   0,  79
+ ,  10,   0,  10,   0,  62,  10,   0,  16,   0,  77,  10,   0,  15,   0,  61,   9,   0,   6
+ ,   0,  64,  10,   0,  16,   0,  74,  12,   0, 124,   0, 135,  12,   0, 113,   0, 156,  12
+ ,   0, 101,   0, 112,  12,   0, 127,   0, 143,  12,   0, 144,   0, 129,  12,   0,  83,   0
+ , 107,  12,   0,  98,   0, 138,  12,   0, 144,   0,  97,  12,   0,  93,   0, 134,  12,   0
+ , 128,   0, 136,  12,   0, 111,   0, 109,  12,   0,  94,   0, 119,  12,   0, 144,   0, 120
+ ,  12,   0, 126,   0, 143,  12,   0, 118,   0, 134,  12,   0, 149,   0, 143,  12,   0, 102
+ ,   0, 143,  12,   0, 131,   0, 143,  12,   0, 154,   0, 143,  12,   0, 114,   0, 143,  12
+ ,   0, 117,   0, 143,  12,   0, 145,   0, 143,  12,   0, 104,   0, 143,  12,   0, 140,   0
+ , 143,  12,   0,  88,   0, 116,  12,   0,  91,   0, 139,  12,   0,  83,   0, 116,  12,   0
+ ,  95,   0, 116,  12,   0, 121,   0, 143,  12,   0, 123,   0, 100,  12,   0,  89,   0,  99
+ ,  12,   0, 153,   0, 125,   1,   0,  16, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47
+ ,  79,  98, 106, 101,  99, 116,   1,   0,   6,  60, 105, 110, 105, 116,  62,   1,   0,  18
+ , 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111, 110, 116,  97, 105, 110, 101, 114
+ ,   1,   0,  10,  83, 111, 117, 114,  99, 101,  70, 105, 108, 101,   1,   0,  22, 106,  97
+ , 118,  97,  47,  97, 119, 116,  47,  76,  97, 121, 111, 117, 116,  77,  97, 110,  97, 103
+ , 101, 114,   1,   0,  10,  67, 108,  97, 115, 115,  71, 114,  97, 112, 104,   1,   0,   4
+ , 109, 111, 118, 101,   1,   0,   8, 116, 111,  83, 116, 114, 105, 110, 103,   1,   0,  10
+ ,  69, 120,  99, 101, 112, 116, 105, 111, 110, 115,   1,   0,  13, 112, 114, 101, 102, 101
+ , 114, 114, 101, 100,  83, 105, 122, 101,   1,   0,  16, 106,  97, 118,  97,  47, 108,  97
+ , 110, 103,  47,  83, 121, 115, 116, 101, 109,   1,   0,   8, 103, 114, 111, 119,  76, 101
+ , 102, 116,   1,   0,   3, 109,  97, 120,   1,   0,   6, 114, 101, 115, 105, 122, 101,   1
+ ,   0,  15, 106,  97, 118,  97,  47,  97, 119, 116,  47,  73, 110, 115, 101, 116, 115,   1
+ ,   0,  44,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105
+ , 110, 103,  59,  41,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114
+ , 105, 110, 103,  66, 117, 102, 102, 101, 114,  59,   1,   0,   6, 105, 110, 115, 101, 116
+ , 115,   1,   0,  20,  40,  41,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83
+ , 116, 114, 105, 110, 103,  59,   1,   0,  23,  40,  76, 106,  97, 118,  97,  47,  97, 119
+ , 116,  47,  67, 111, 110, 116,  97, 105, 110, 101, 114,  59,  41,  86,   1,   0,  12, 103
+ , 101, 116,  67, 111, 109, 112, 111, 110, 101, 110, 116,   1,   0,   3, 116, 111, 112,   1
+ ,   0,  15, 108,  97, 121, 111, 117, 116,  67, 111, 110, 116,  97, 105, 110, 101, 114,   1
+ ,   0,   5, 115, 112,  97,  99, 101,   1,   0,  18, 106,  97, 118,  97,  47,  97, 119, 116
+ ,  47,  67, 111, 109, 112, 111, 110, 101, 110, 116,   1,   0,  22, 106,  97, 118,  97,  47
+ , 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  66, 117, 102, 102, 101, 114,   1
+ ,   0,   3,  40,  41,  86,   1,   0,  23,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116
+ ,  47,  67, 111, 109, 112, 111, 110, 101, 110, 116,  59,  41,  86,   1,   0,   3,  40,  41
+ ,  73,   1,   0,  14, 106,  97, 118,  97,  47,  97, 119, 116,  47,  80, 111, 105, 110, 116
+ ,   1,   0,  15,  99, 111, 117, 110, 116,  67, 111, 109, 112, 111, 110, 101, 110, 116, 115
+ ,   1,   0,  23,  40,  73,  41,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111
+ , 109, 112, 111, 110, 101, 110, 116,  59,   1,   0,   8, 108, 111,  99,  97, 116, 105, 111
+ , 110,   1,   0,   8, 114, 105, 103, 104, 116, 109,  97, 120,   1,   0,  18, 106,  97, 118
+ ,  97,  47,  97, 119, 116,  47,  68, 105, 109, 101, 110, 115, 105, 111, 110,   1,   0,   5
+ ,  40,  73,  73,  41,  86,   1,   0,   4, 108, 101, 102, 116,   1,   0,   5, 102, 105, 114
+ , 115, 116,   1,   0,   5,  40,  73,  73,  41,  73,   1,   0,  44,  40,  76, 106,  97, 118
+ ,  97,  47, 108,  97, 110, 103,  47,  79,  98, 106, 101,  99, 116,  59,  41,  76, 106,  97
+ , 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  66, 117, 102, 102
+ , 101, 114,  59,   1,   0,   8, 100, 105, 115, 116,  97, 110,  99, 101,   1,   0,  18,  97
+ , 100, 100,  76,  97, 121, 111, 117, 116,  67, 111, 109, 112, 111, 110, 101, 110, 116,   1
+ ,   0,   9,  99,  97, 108,  99,  83, 116, 117, 102, 102,   1,   0,   7, 112, 114, 105, 110
+ , 116, 108, 110,   1,   0,  42,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67
+ , 111, 110, 116,  97, 105, 110, 101, 114,  59,  41,  76, 106,  97, 118,  97,  47,  97, 119
+ , 116,  47,  68, 105, 109, 101, 110, 115, 105, 111, 110,  59,   1,   0,   1, 121,   1,   0
+ ,   1, 120,   1,   0,   3, 111, 117, 116,   1,   0,  27,  40,  73,  41,  76, 106,  97, 118
+ ,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  66, 117, 102, 102, 101
+ , 114,  59,   1,   0,  14, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  77,  97, 116
+ , 104,   1,   0,   5, 119, 105, 100, 116, 104,   1,   0,  19, 106,  97, 118,  97,  47, 105
+ , 111,  47,  80, 114, 105, 110, 116,  83, 116, 114, 101,  97, 109,   1,   0,  15,  67, 108
+ ,  97, 115, 115,  71, 114,  97, 112, 104,  46, 106,  97, 118,  97,   1,   0,   1,  90,   1
+ ,   0,  21,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105
+ , 110, 103,  59,  41,  86,   1,   0,  21,  76, 106,  97, 118,  97,  47, 105, 111,  47,  80
+ , 114, 105, 110, 116,  83, 116, 114, 101,  97, 109,  59,   1,   0,  41,  40,  76, 106,  97
+ , 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  76, 106,  97
+ , 118,  97,  47,  97, 119, 116,  47,  67, 111, 109, 112, 111, 110, 101, 110, 116,  59,  41
+ ,  86,   1,   0,  19,  40,  41,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  73, 110
+ , 115, 101, 116, 115,  59,   1,   0,  22,  40,  41,  76, 106,  97, 118,  97,  47,  97, 119
+ , 116,  47,  68, 105, 109, 101, 110, 115, 105, 111, 110,  59,   1,   0,   5, 114, 105, 103
+ , 104, 116,   1,   0,  11,  67, 108,  97, 115, 115,  76,  97, 121, 111, 117, 116,   1,   0
+ ,  13,  67, 111, 110, 115, 116,  97, 110, 116,  86,  97, 108, 117, 101,   1,   0,   1,  73
+ ,   1,   0,   6,  97, 112, 112, 101, 110, 100,   1,   0,   7, 108, 101, 102, 116, 109,  97
+ , 120,   1,   0,  15,  67, 108,  97, 115, 115,  71, 114,  97, 112, 104,  80,  97, 110, 101
+ , 108,   1,   0,   4,  67, 111, 100, 101,   1,   0,   1,  58,   1,   0,   6, 104, 101, 105
+ , 103, 104, 116,   1,   0,  17, 109, 105, 110, 105, 109, 117, 109,  76,  97, 121, 111, 117
+ , 116,  83, 105, 122, 101,   1,   0,  21, 114, 101, 109, 111, 118, 101,  76,  97, 121, 111
+ , 117, 116,  67, 111, 109, 112, 111, 110, 101, 110, 116,   1,   0,  14,  76, 111,  99,  97
+ , 108,  86,  97, 114, 105,  97,  98, 108, 101, 115,   1,   0,  19, 112, 114, 101, 102, 101
+ , 114, 114, 101, 100,  76,  97, 121, 111, 117, 116,  83, 105, 122, 101,   1,   0,   6,  98
+ , 111, 116, 116, 111, 109,   1,   0,  15,  78,  97, 118, 105, 103,  97, 116, 111, 114,  66
+ , 117, 116, 116, 111, 110,   1,   0,  18,  40,  41,  76, 106,  97, 118,  97,  47,  97, 119
+ , 116,  47,  80, 111, 105, 110, 116,  59,   0,   0,   0,   6,   0,   5,   0,   1,   0,   4
+ ,   0,   4,   0,   0,   0, 121,   0, 143,   0,   0,   0,   0,   0, 145,   0, 143,   0,   0
+ ,   0,   0,   0, 114,   0, 143,   0,   0,   0,   0,   0, 118,   0, 134,   0,   0,   0,   7
+ ,   0,   1,   0,  83,   0, 107,   0,   1,   0, 147,   0,   0,   0,  38,   0,   2,   0,   1
+ ,   0,   0,   0,  26,  42, 183,   0,  42,  42,  16,  30, 181,   0,  43,  42,   5, 181,   0
+ ,  35,  42,   5, 181,   0,  29,  42,   4, 181,   0,  48, 177,   0,   0,   0,   0,   0,   1
+ ,   0, 122,   0, 137,   0,   1,   0, 147,   0,   0,   0,  13,   0,   0,   0,   3,   0,   0
+ ,   0,   1, 177,   0,   0,   0,   0,   0,   1,   0, 151,   0, 108,   0,   1,   0, 147,   0
+ ,   0,   0,  13,   0,   0,   0,   2,   0,   0,   0,   1, 177,   0,   0,   0,   0,   0,   1
+ ,   0, 153,   0, 125,   0,   1,   0, 147,   0,   0,   0, 181,   0,   5,   0,  10,   0,   0
+ ,   0, 169,  43, 182,   0,  32,  77,  43, 182,   0,  30,  62,   3,  54,   4,  29,  42, 180
+ ,   0,  43, 104,  54,   5,   3,  54,   6, 167,   0,  86,  43,  21,   6, 182,   0,  22,  58
+ ,   7,  25,   7, 182,   0,  25,  58,   8,  25,   7, 182,   0,  17,  58,   9,  25,   9, 180
+ ,   0,  40,  25,   8, 180,   0,  23,  96,  21,   4, 164,   0,  16,  25,   9, 180,   0,  40
+ ,  25,   8, 180,   0,  23,  96,  54,   4,  25,   9, 180,   0,  37,  25,   8, 180,   0,  21
+ ,  96,  21,   5, 164,   0,  16,  25,   9, 180,   0,  37,  25,   8, 180,   0,  21,  96,  54
+ ,   5, 132,   6,   1,  21,   6,  29, 161, 255, 170,  42,  43, 182,   0,  44,  42, 180,   0
+ ,  35,  42, 180,   0,  29,  96,  42, 180,   0,  43, 104,  54,   4, 187,   0,  13,  89,  44
+ , 180,   0,  31,  44, 180,   0,  26,  96,  21,   4,  96,  44, 180,   0,  33,  44, 180,   0
+ ,  28,  96,  21,   5,  96, 183,   0,  19, 176,   0,   0,   0,   0,   0,   0,   0, 123,   0
+ , 100,   0,   1,   0, 147,   0,   0,   0, 118,   0,   4,   0,   7,   0,   0,   0, 106,  43
+ , 182,   0,  30,  61,   3,  62, 167,   0,  93,  43,  29, 182,   0,  22, 192,   0,  12,  58
+ ,   4,  25,   4, 182,   0,  25,  58,   5,  25,   4, 180,   0,  24,   5,  25,   5, 180,   0
+ ,  23,  42, 180,   0,  43,  96,   4, 100,  42, 180,   0,  43, 108, 184,   0,  47,  96,  54
+ ,   6,  25,   4, 180,   0,  18, 153,   0,  21,  21,   6,  42, 180,   0,  35, 164,   0,  27
+ ,  42,  21,   6, 181,   0,  35, 167,   0,  18,  21,   6,  42, 180,   0,  29, 164,   0,   9
+ ,  42,  21,   6, 181,   0,  29, 132,   3,   1,  29,  28, 161, 255, 164, 177,   0,   0,   0
+ ,   0,   0,   1,   0, 150,   0, 125,   0,   1,   0, 147,   0,   0,   0,  18,   0,   2,   0
+ ,   2,   0,   0,   0,   6,  42,  43, 182,   0,  41, 176,   0,   0,   0,   0,   0,   1,   0
+ , 103,   0, 100,   0,   1,   0, 147,   0,   0,   1,  29,   0,   5,   0,  11,   0,   0,   1
+ ,  17,  42,  43, 182,   0,  44,  43, 182,   0,  30,  61,   3,  62,   3,  54,   4, 167,   0
+ ,  39,  43,  21,   4, 182,   0,  22, 192,   0,  12,  58,   5,  25,   5, 182,   0,  25,  58
+ ,   6,  25,   6, 180,   0,  21,  29, 164,   0,   9,  25,   6, 180,   0,  21,  62, 132,   4
+ ,   1,  21,   4,  28, 161, 255, 217,   3,  54,   5, 167,   0, 203,  43,  21,   5, 182,   0
+ ,  22, 192,   0,  12,  58,   6,  25,   6, 182,   0,  25,  58,   7,  25,   7, 180,   0,  23
+ ,   5,  42, 180,   0,  43, 104, 162,   0,  14,  25,   7,   5,  42, 180,   0,  43, 104, 181
+ ,   0,  23,  25,   6,  25,   7, 180,   0,  23,  25,   7, 180,   0,  21, 182,   0,  46,  25
+ ,   6, 182,   0,  17,  58,   8,  42, 180,   0,  35,   5, 100,  54,   9,  21,   9, 156,   0
+ ,   6,   3,  54,   9,  42, 180,   0,  35,  54,  10,  25,   6, 180,   0,  18, 153,   0,  30
+ ,  25,   8,  21,  10,  25,   6, 180,   0,  24, 100,  42, 180,   0,  43, 104,  25,   7, 180
+ ,   0,  23, 100, 181,   0,  40, 167,   0,  21,  25,   8,  25,   6, 180,   0,  24,  21,   9
+ ,  96,  42, 180,   0,  43, 104, 181,   0,  40,  25,   6,  25,   8, 180,   0,  40,  21,   5
+ ,  42, 180,   0,  43, 104,  42, 180,   0,  43,  29, 100,   5, 108,  96, 182,   0,  49, 178
+ ,   0,  39, 187,   0,  10,  89, 183,   0,  20,  21,   5, 182,   0,  34,  18,   1, 182,   0
+ ,  38,  25,   6, 182,   0,  45, 182,   0,  36, 182,   0,  27, 132,   5,   1,  21,   5,  28
+ , 161, 255,  53, 177,   0,   0,   0,   0,   0,   1,   0,  85,   0,   0,   0,   2,   0, 133
+ };static unsigned char NavigatorButton_class []={
+  202, 254, 186, 190,   0,   3,   0,  45,   0, 122,   8,   0,  81,   8,   0,  92,   8,   0
+ ,  72,   7,   0,  76,   7,   0,  59,   7,   0, 115,   7,   0, 111,   7,   0, 121,   7,   0
+ , 112,   7,   0,  77,   7,   0,  69,   7,   0,  75,   7,   0, 108,   7,   0,  93,   7,   0
+ ,  67,   7,   0,  88,  10,   0,   5,   0,  43,   9,   0,  15,   0,  50,  10,   0,  14,   0
+ ,  51,  10,   0,   7,   0,  58,  10,   0,   7,   0,  52,   9,   0,  15,   0,  40,  10,   0
+ ,  12,   0,  45,  10,   0,   7,   0,  57,   9,   0,  15,   0,  41,  10,   0,  14,   0,  56
+ ,  11,   0,  10,   0,  39,   9,   0,  15,   0,  55,   9,   0,   4,   0,  49,   9,   0,  15
+ ,   0,  38,  10,   0,  14,   0,  42,   9,   0,  11,   0,  54,  10,   0,   7,   0,  44,  10
+ ,   0,  13,   0,  46,   9,   0,  15,   0,  53,   9,   0,  15,   0,  48,   9,   0,  15,   0
+ ,  47,  12,   0,  83,   0,  97,  12,   0,  82,   0, 107,  12,   0,  63,   0,  78,  12,   0
+ ,  85,   0,  91,  12,   0,  86,   0, 119,  12,   0,  95,   0,  68,  12,   0,  79,   0,  87
+ ,  12,   0, 116,   0, 103,  12,   0, 116,   0,  68,  12,   0,  84,   0,  91,  12,   0,  61
+ ,   0,  90,  12,   0,  89,   0, 101,  12,   0,  99,   0,  94,  12,   0, 110,   0,  64,  12
+ ,   0,  79,   0, 106,  12,   0, 120,   0,  97,  12,   0, 100,   0,  71,  12,   0,  65,   0
+ ,  78,  12,   0, 117,   0, 118,  12,   0, 116,   0,  80,  12,   0,  98,   0, 113,   1,   0
+ ,  19, 106,  97, 118,  97,  47, 105, 111,  47,  80, 114, 105, 110, 116,  83, 116, 114, 101
+ ,  97, 109,   1,   0,  13,  67, 111, 110, 115, 116,  97, 110, 116,  86,  97, 108, 117, 101
+ ,   1,   0,   7,  99, 111, 110, 116, 101, 120, 116,   1,   0,  10, 110, 111, 114, 109,  97
+ , 108,  70, 111, 110, 116,   1,   0,  10, 105, 116,  97, 108, 105,  99,  70, 111, 110, 116
+ ,   1,   0,  18,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  70, 111, 110, 116
+ ,  59,  41,  86,   1,   0,   8,  98, 111, 108, 100,  70, 111, 110, 116,   1,   0,   4,  98
+ , 111, 108, 100,   1,   0,  15,  78,  97, 118, 105, 103,  97, 116, 111, 114,  66, 117, 116
+ , 116, 111, 110,   1,   0,  21,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47
+ ,  83, 116, 114, 105, 110, 103,  59,  41,  86,   1,   0,  14, 106,  97, 118,  97,  47,  97
+ , 119, 116,  47,  67, 111, 108, 111, 114,   1,   0,  10,  69, 120,  99, 101, 112, 116, 105
+ , 111, 110, 115,   1,   0,  16,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111
+ , 108, 111, 114,  59,   1,   0,  13,  32, 105, 115,  32,  73, 110, 116, 101, 114, 102,  97
+ ,  99, 101,   1,   0,   6,  97,  99, 116, 105, 111, 110,   1,   0,  10,  83, 111, 117, 114
+ ,  99, 101,  70, 105, 108, 101,   1,   0,  13, 106,  97, 118,  97,  47,  97, 119, 116,  47
+ ,  70, 111, 110, 116,   1,   0,  16, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83
+ , 121, 115, 116, 101, 109,   1,   0,  25, 106,  97, 118,  97,  47,  97, 112, 112, 108, 101
+ , 116,  47,  65, 112, 112, 108, 101, 116,  67, 111, 110, 116, 101, 120, 116,   1,   0,  15
+ ,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  70, 111, 110, 116,  59,   1,   0,   6
+ ,  97, 112, 112, 101, 110, 100,   1,   0,   3,  40,  41,  86,   1,   0,   5,  70, 111, 110
+ , 116,  61,   1,   0,  12, 115, 104, 111, 119,  68, 111,  99, 117, 109, 101, 110, 116,   1
+ ,   0,   6, 105, 110, 100, 101, 110, 116,   1,   0,  11, 105, 115,  73, 110, 116, 101, 114
+ , 102,  97,  99, 101,   1,   0,   8, 103, 114, 111, 119,  76, 101, 102, 116,   1,   0,   7
+ , 103, 101, 116,  70, 111, 110, 116,   1,   0,  44,  40,  76, 106,  97, 118,  97,  47, 108
+ ,  97, 110, 103,  47,  79,  98, 106, 101,  99, 116,  59,  41,  76, 106,  97, 118,  97,  47
+ , 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  66, 117, 102, 102, 101, 114,  59
+ ,   1,   0,  19, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  69, 120,  99, 101, 112
+ , 116, 105, 111, 110,   1,   0,   3, 111, 117, 116,   1,   0,  27,  76, 106,  97, 118,  97
+ ,  47,  97, 112, 112, 108, 101, 116,  47,  65, 112, 112, 108, 101, 116,  67, 111, 110, 116
+ , 101, 120, 116,  59,   1,   0,   1,  90,   1,   0,   9,  72, 101, 108, 118, 101, 116, 105
+ ,  99,  97,   1,   0,  18, 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111, 109, 112
+ , 111, 110, 101, 110, 116,   1,   0,  14,  76, 106,  97, 118,  97,  47, 110, 101, 116,  47
+ ,  85,  82,  76,  59,   1,   0,   7, 112, 114, 105, 110, 116, 108, 110,   1,   0,   4, 105
+ , 110, 105, 116,   1,   0,   1,  73,   1,   0,   8, 116, 111,  83, 116, 114, 105, 110, 103
+ ,   1,   0,   3, 117, 114, 108,   1,   0,   4,  98, 108, 117, 101,   1,   0,  21,  76, 106
+ ,  97, 118,  97,  47, 105, 111,  47,  80, 114, 105, 110, 116,  83, 116, 114, 101,  97, 109
+ ,  59,   1,   0,   4,  67, 111, 100, 101,   1,   0,  23,  40,  76, 106,  97, 118,  97,  47
+ , 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,  73,  73,  41,  86,   1,   0
+ ,  14,  76, 111,  99,  97, 108,  86,  97, 114, 105,  97,  98, 108, 101, 115,   1,   0,  37
+ ,  40,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  69, 118, 101, 110, 116,  59,  76
+ , 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  79,  98, 106, 101,  99, 116,  59,  41
+ ,  90,   1,   0,  44,  40,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116
+ , 114, 105, 110, 103,  59,  41,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83
+ , 116, 114, 105, 110, 103,  66, 117, 102, 102, 101, 114,  59,   1,   0,  17,  40,  76, 106
+ ,  97, 118,  97,  47, 110, 101, 116,  47,  85,  82,  76,  59,  41,  86,   1,   0,  15, 106
+ ,  97, 118,  97,  47,  97, 119, 116,  47,  66, 117, 116, 116, 111, 110,   1,   0,  15,  67
+ , 108,  97, 115, 115,  71, 114,  97, 112, 104,  46, 106,  97, 118,  97,   1,   0,   7, 115
+ , 101, 116,  70, 111, 110, 116,   1,   0,  22, 106,  97, 118,  97,  47, 108,  97, 110, 103
+ ,  47,  83, 116, 114, 105, 110, 103,  66, 117, 102, 102, 101, 114,   1,   0,  11,  67, 108
+ ,  97, 115, 115,  76,  97, 121, 111, 117, 116,   1,   0,  20,  40,  41,  76, 106,  97, 118
+ ,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59,   1,   0,  66,  40
+ ,  76, 106,  97, 118,  97,  47, 108,  97, 110, 103,  47,  83, 116, 114, 105, 110, 103,  59
+ ,  76, 106,  97, 118,  97,  47, 110, 101, 116,  47,  85,  82,  76,  59,  76, 106,  97, 118
+ ,  97,  47,  97, 112, 112, 108, 101, 116,  47,  65, 112, 112, 108, 101, 116,  67, 111, 110
+ , 116, 101, 120, 116,  59,  90,  90,  73,  73,  41,  86,   1,   0,  10,  67, 108,  97, 115
+ , 115,  71, 114,  97, 112, 104,   1,   0,   6,  60, 105, 110, 105, 116,  62,   1,   0,  13
+ , 115, 101, 116,  70, 111, 114, 101, 103, 114, 111, 117, 110, 100,   1,   0,  19,  40,  76
+ , 106,  97, 118,  97,  47,  97, 119, 116,  47,  67, 111, 108, 111, 114,  59,  41,  86,   1
+ ,   0,  17,  40,  41,  76, 106,  97, 118,  97,  47,  97, 119, 116,  47,  70, 111, 110, 116
+ ,  59,   1,   0,   5, 115, 112,  97,  99, 101,   1,   0,  15,  67, 108,  97, 115, 115,  71
+ , 114,  97, 112, 104,  80,  97, 110, 101, 108,   0,   0,   0,  15,   0,  13,   0,   0,   0
+ ,  10,   0,   0,   0,  61,   0,  90,   0,   0,   0,   0,   0,  99,   0,  94,   0,   0,   0
+ ,   0,   0, 120,   0,  97,   0,   0,   0,   0,   0,  83,   0,  97,   0,   0,   0,   0,   0
+ ,  85,   0,  91,   0,   0,   0,   0,   0,  66,   0,  91,   0,   0,   0,   0,   0,  84,   0
+ ,  91,   0,   0,   0,   0,   0,  65,   0,  78,   0,   0,   0,   0,   0,  63,   0,  78,   0
+ ,   0,   0,   0,   0,  62,   0,  78,   0,   0,   0,   3,   0,   0,   0, 116,   0, 114,   0
+ ,   1,   0, 102,   0,   0,   0, 167,   0,   6,   0,   8,   0,   0,   0, 155,  42,  43, 183
+ ,   0,  34,  42,  21,   5, 181,   0,  37,  42,  45, 181,   0,  36,  42,  44, 181,   0,  18
+ ,  42,  21,   4, 181,   0,  25,  42,  21,   6, 181,   0,  35,  42,  21,   7, 181,   0,  30
+ ,  42, 180,   0,  28, 199,   0,  19,  42, 187,   0,  12,  89,  18,   2,   4,  16,  12, 183
+ ,   0,  23, 181,   0,  28,  42, 180,   0,  22, 199,   0,  19,  42, 187,   0,  12,  89,  18
+ ,   2,   5,  16,  12, 183,   0,  23, 181,   0,  22,  42, 180,   0,  37, 153,   0,  35,  42
+ , 178,   0,  32, 182,   0,  26, 178,   0,  29, 187,   0,   7,  89, 183,   0,  24,  43, 182
+ ,   0,  21,  18,   3, 182,   0,  21, 182,   0,  20, 182,   0,  17,  42, 180,   0,  18, 199
+ ,   0,  11,  42,  42, 180,   0,  22, 182,   0,  19,  42, 180,   0,  35, 154,   0,  11,  42
+ ,  42, 180,   0,  28, 182,   0,  19, 177,   0,   0,   0,   0,   0,   1,   0,  96,   0,  80
+ ,   0,   1,   0, 102,   0,   0,   0,  41,   0,   3,   0,   1,   0,   0,   0,  29, 178,   0
+ ,  29, 187,   0,   7,  89, 183,   0,  24,  18,   1, 182,   0,  21,  42, 182,   0,  31, 182
+ ,   0,  33, 182,   0,  20, 182,   0,  17, 177,   0,   0,   0,   0,   0,   1,   0,  73,   0
+ , 105,   0,   1,   0, 102,   0,   0,   0,  48,   0,   2,   0,   3,   0,   0,   0,  28,  42
+ , 180,   0,  18, 198,   0,  22,  42, 180,   0,  36,  42, 180,   0,  18, 185,   0,  27,   2
+ ,   0, 167,   0,   4,  87,   4, 172,   3, 172,   0,   1,   0,   7,   0,  20,   0,  23,   0
+ ,  16,   0,   0,   0,   1,   0,  74,   0,   0,   0,   2,   0, 109}; 
diff -c src/java.l src-g++-2.8.1/java.l
*** src/java.l	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/java.l	Tue Sep 15 09:11:51 1998
***************
*** 66,72 ****
  
  void	here()
  {
-     int i= 0 ;
  }
  
  /* -----------------------------------------------------------------
--- 66,71 ----
Only in src-g++-2.8.1: java.o
Only in src-g++-2.8.1: logo.gif
Only in src-g++-2.8.1: main.o
Only in src-g++-2.8.1: nametable.o
Only in src-g++-2.8.1: promote
diff -c src/readfiles.cpp src-g++-2.8.1/readfiles.cpp
*** src/readfiles.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/readfiles.cpp	Tue Sep 15 11:44:00 1998
***************
*** 19,25 ****
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
--- 19,25 ----
  /* A lexical scanner generated by flex */
  
  /* Scanner skeleton version:
!  * $Header: /home/jimg/cvs2svn-1.2.1/cvs-repository/DODS-doc/latex/docxx/PATCH-g++-2.8.1,v 1.1 2001/07/20 19:32:45 tom Exp $
   */
  
  #define FLEX_SCANNER
***************
*** 254,260 ****
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
--- 254,260 ----
  #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
  
  YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
! YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
  YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
  
  static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
***************
*** 424,430 ****
  
  
  #include "McString.h"
! #include "McSorter.h"
  #include "nametable.hh"
  #include "doc.h"
  
--- 424,430 ----
  
  
  #include "McString.h"
! // #include "McSorter.h" Not used 9/15/98 jhrg
  #include "nametable.hh"
  #include "doc.h"
  
***************
*** 946,952 ****
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_n_chars = 0;
  
  	else
  		{
--- 946,952 ----
  		/* don't do the read, it's not guaranteed to return an EOF,
  		 * just force an EOF
  		 */
! 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
  
  	else
  		{
***************
*** 1001,1006 ****
--- 1001,1008 ----
  		/* Read in more data. */
  		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
  			yy_n_chars, num_to_read );
+ 
+ 		yy_current_buffer->yy_n_chars = yy_n_chars;
  		}
  
  	if ( yy_n_chars == 0 )
***************
*** 1126,1132 ****
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
--- 1128,1135 ----
  
  		yy_cp += (int) (dest - source);
  		yy_bp += (int) (dest - source);
! 		yy_current_buffer->yy_n_chars =
! 			yy_n_chars = yy_current_buffer->yy_buf_size;
  
  		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
  			YY_FATAL_ERROR( "flex scanner push-back overflow" );
***************
*** 1169,1181 ****
  
  			switch ( yy_get_next_buffer() )
  				{
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
- 						{
- 						yy_c_buf_p = yytext_ptr + offset;
  						return EOF;
- 						}
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
--- 1172,1197 ----
  
  			switch ( yy_get_next_buffer() )
  				{
+ 				case EOB_ACT_LAST_MATCH:
+ 					/* This happens because yy_g_n_b()
+ 					 * sees that we've accumulated a
+ 					 * token and flags that we need to
+ 					 * try matching the token before
+ 					 * proceeding.  But for input(),
+ 					 * there's no matching to consider.
+ 					 * So convert the EOB_ACT_LAST_MATCH
+ 					 * to EOB_ACT_END_OF_FILE.
+ 					 */
+ 
+ 					/* Reset buffer status. */
+ 					yyrestart( yyin );
+ 
+ 					/* fall through */
+ 
  				case EOB_ACT_END_OF_FILE:
  					{
  					if ( yywrap() )
  						return EOF;
  
  					if ( ! yy_did_buffer_switch_on_eof )
  						YY_NEW_FILE;
***************
*** 1189,1203 ****
  				case EOB_ACT_CONTINUE_SCAN:
  					yy_c_buf_p = yytext_ptr + offset;
  					break;
- 
- 				case EOB_ACT_LAST_MATCH:
- #ifdef __cplusplus
- 					YY_FATAL_ERROR(
- 					"unexpected last match in yyinput()" );
- #else
- 					YY_FATAL_ERROR(
- 					"unexpected last match in input()" );
- #endif
  				}
  			}
  		}
--- 1205,1210 ----
***************
*** 1362,1367 ****
--- 1369,1377 ----
  #endif
  
  	{
+ 	if ( ! b )
+ 		return;
+ 
  	b->yy_n_chars = 0;
  
  	/* We always need two end-of-buffer characters.  The first causes
***************
*** 1421,1437 ****
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *str )
  #else
! YY_BUFFER_STATE yy_scan_string( str )
! yyconst char *str;
  #endif
  	{
  	int len;
! 	for ( len = 0; str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( str, len );
  	}
  #endif
  
--- 1431,1447 ----
  
  #ifndef YY_NO_SCAN_STRING
  #ifdef YY_USE_PROTOS
! YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
  #else
! YY_BUFFER_STATE yy_scan_string( yy_str )
! yyconst char *yy_str;
  #endif
  	{
  	int len;
! 	for ( len = 0; yy_str[len]; ++len )
  		;
  
! 	return yy_scan_bytes( yy_str, len );
  	}
  #endif
  
diff -c src/readfiles.l src-g++-2.8.1/readfiles.l
*** src/readfiles.l	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/readfiles.l	Tue Sep 15 09:59:51 1998
***************
*** 27,33 ****
  
  
  #include "McString.h"
! #include "McSorter.h"
  #include "nametable.hh"
  #include "doc.h"
  
--- 27,33 ----
  
  
  #include "McString.h"
! // #include "McSorter.h" Not used 9/15/98 jhrg
  #include "nametable.hh"
  #include "doc.h"
  
Only in src-g++-2.8.1: readfiles.o
diff -c src/tex2gif.cpp src-g++-2.8.1/tex2gif.cpp
*** src/tex2gif.cpp	Fri Jul 31 03:00:40 1998
--- src-g++-2.8.1/tex2gif.cpp	Tue Sep 15 11:18:26 1998
***************
*** 158,165 ****
--- 158,170 ----
  	    
  	    gx=((gx+7)/8)*8;
  	    
+ #if 0
+ 	    // Wrong arg count! 9/15/98 jhrg
  	    sprintf(buf,"gs -g%dx%d -r%dx%d -sDEVICE=ppmraw -sOutputFile=dxxtmp.pnm -DNOPAUSE -- dxxps.ps",
  		    gx,gy,(int)(resfac*72),(int)(resfac*72),i);
+ #endif
+ 	    sprintf(buf,"gs -g%dx%d -r%dx%d -sDEVICE=ppmraw -sOutputFile=dxxtmp.pnm -DNOPAUSE -- dxxps.ps",
+ 		    gx,gy,(int)(resfac*72),(int)(resfac*72));
  	    
  	    _system(buf);
  
Only in src-g++-2.8.1: tex2gif.o
